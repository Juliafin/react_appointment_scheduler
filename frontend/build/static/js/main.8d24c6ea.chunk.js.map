{"version":3,"sources":["history.js","actions/appointmentActions.js","actions/actionTypes.js","components/navbar.js","components/appointment.js","components/timeTable.js","utils/generateSchedule.js","pages/schedule.js","pages/signUpSignIn.js","pages/home.js","App.js","reducers/appointmentReducer.js","store.js","index.js"],"names":["createBrowserHistory","getAppointments","token","dispatch","headers","Authorization","concat","console","log","axios","get","then","response","data","catch","error","authenticateUserSuccess","type","authenticateUser","post","authResponse","status","setCurrentAppointmentName","appointmentName","setCurrentAppointmentPhoneNumber","appointmentPhoneNumber","setAppointmentTimes","appointments","connect","state","guestMode","currentUserAuthenticated","props","react_default","a","createElement","lib","className","brand","left","node","Link","to","href","onClick","Appointment","_ref","appointmentTime","appointmentIndex","edited","editedClass","index","TimeTable","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","appointmentClick","bind","assertThisInitialized","event","parseInt","target","getAttribute","setCurrentAppointmentTime","setCurrentAppointmentIndex","setCurrentAppointmentEditedState","_this2","map","appt","i","components_appointment","key","Component","generateTimes","initialHour","endHour","hours","hour","push","moment","format","Schedule","closeModal","closeModalAndUpdate","updateApptName","updateAppointment","clearAppointment","updateApptPhoneNumber","validate","showConfirmationModal","closeConfirmationModal","deleteAppointments","keyDownSubmit","currentUserID","currentUserToken","nextProps","name","value","phoneNumber","appointmentNameValid","phoneNumberValid","modalHeader","currentAppointment","modalButtonText","id","waves","header","modalOptions","complete","actions","open","showDeleteModal","components_timeTable","currentUserEmail","showModal","fixedFooter","disabled","ready","l","placeholder","indexOf","defaultValue","onChange","success","label","onKeyPress","appointmentValid","SignUpSignIn","toggleRegistration","setEmail","setPassword","validateEmail","validatePassword","handleSignUpSignIn","determineRegistration","password","validateSignInSignUpForm","email","signInSignUpFormValid","registration","message","_response$data$create","createdUser","_id","history","registerUserSuccess","_response$data$logged","loggedInUser","userToken","loginUser","match","url","active","loaderState","checked","onLabel","offLabel","m","offset","emailValid","passwordValid","Home","ipData","err","ipInfo","city","region","App","_Component","apply","arguments","inherits","createClass","times","components_navbar","Route","exact","path","component","withRouter","initialState","ipAvailable","appointmentNameFormTouched","appointmentPhoneNumberFormTouched","createStore","length","undefined","action","assign","objectSpread","updatedAppointments","slice","RegExp","test","Boolean","cachedAppointments","JSON","parse","localStorage","getItem","setItem","stringify","apppointments","authInfo","userID","userEmail","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","es","store","Router","src_App_0","document","getElementById"],"mappings":"kZACeA,gBCSFC,EAAkB,SAACC,GAAD,OAAW,SAACC,GACzC,IACIC,EAAU,CAACC,cAAA,UAAAC,OAA2BJ,IAC1CK,QAAQC,IAAI,wBACZC,IAAMC,IAH4B,oBAGG,GAAI,CAACN,YACvCO,KAAK,SAACC,GACLL,QAAQC,IAAII,EAASC,QAEtBC,MAAM,SAACC,GACNR,QAAQC,IAAIO,OAiBLC,EAA2B,CACtCC,KClCuC,6BDsC5BC,EAAmB,SAAChB,GAAD,OAAW,SAACC,GAC1C,IACIC,EAAU,CAACC,cAAA,UAAAC,OAA2BJ,IAE1CO,IAAMU,KAHc,qBAGM,GAAI,CAACf,YAC5BO,KAAK,SAACS,GAIL,OAHAb,QAAQC,IAAIY,EAAaC,QACzBd,QAAQC,IAAIY,EAAaP,MACzBN,QAAQC,IAAI,gCACLL,EAASa,SAmGTM,EAA4B,SAACC,GAAD,MAAsB,CAC7DN,KC3I0C,+BD4I1CM,oBAUWC,EAAmC,SAACC,GAAD,MAA6B,CAC3ER,KCrJkD,uCDsJlDQ,2BAIWC,EAAsB,SAACC,GAAD,MAAmB,CACpDV,KC1JmC,wBD2JnCU,iBE9HaC,sBALS,SAACC,GAAD,MAAY,CAClCC,UAAWD,EAAMC,UACjBC,yBAA0BF,EAAME,2BAGnBH,CApCI,SAACI,GAClB,OACEC,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,UAAU,MAAMC,MAAM,8BAA8BC,MAAI,GAC9DN,EAAAC,EAAAC,cAACC,EAAA,QAAD,CAASI,KAAMP,EAAAC,EAAAC,cAAA,aACbF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMJ,UAAU,UAAUK,GAAG,KAA7B,SAEFT,EAAAC,EAAAC,cAACC,EAAA,QAAD,CAASI,KAAMP,EAAAC,EAAAC,cAAA,YAAaQ,KAAK,mBAE7BX,EAAMD,yBAA2BC,EAAMF,UACrCG,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMJ,UAAU,UAAUK,GAAG,aAA7B,YAEAT,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMG,QAAS,kBAAMZ,EAAM7B,SF4GD,CACpCc,KCxH+B,uBCWmCoB,UAAU,UAAUK,GAAG,aAA/E,UAKJV,EAAMD,yBACJE,EAAAC,EAAAC,cAACC,EAAA,QAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,UAAU,gCAAgCO,QAAS,kBAAMZ,EAAM7B,SFAtD,CAC3Bc,KCzBoB,aCwBV,YAKF,gBCVK4B,UAhBK,SAAAC,GAAmG,IAAjGvB,EAAiGuB,EAAjGvB,gBAAiBwB,EAAgFD,EAAhFC,gBAAiBC,EAA+DF,EAA/DE,iBAAkBvB,EAA6CqB,EAA7CrB,uBAAwBwB,EAAqBH,EAArBG,OAAQL,EAAaE,EAAbF,QACpGM,EAAW,GAAA5C,OAAM2C,EAAS,2CAA6C,wCAA5D,qBACf,OACEhB,EAAAC,EAAAC,cAAA,OACEE,UAAU,uBACVc,MAAOH,EACPJ,QAASA,GACTX,EAAAC,EAAAC,cAAA,OAAKgB,MAAOH,EAAkBX,UAAU,eACtCJ,EAAAC,EAAAC,cAAA,OAAKgB,MAAOH,EAAkBX,UAAWa,EAAc,QAAS3B,GAAoC,KACpGU,EAAAC,EAAAC,cAAA,OAAKgB,MAAOH,EAAkBX,UAAWa,EAAc,eAAgBzB,GAAkD,gBACzHQ,EAAAC,EAAAC,cAAA,OAAKgB,MAAOH,EAAkBX,UAAWa,EAAc,QAASH,OCAlEK,sBACJ,SAAAA,EAAYpB,GAAO,IAAAqB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMxB,KACD4B,iBAAmBP,EAAKO,iBAAiBC,KAAtBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAFPA,gFAKFU,GACf,IAAIZ,EAAQa,SAASD,EAAME,OAAOC,aAAa,UAC3C3C,EAAkBiC,KAAKxB,MAAML,aAAawB,GAAO5B,gBACjDwB,EAAkBS,KAAKxB,MAAML,aAAawB,GAAOJ,gBACjDtB,EAAyB+B,KAAKxB,MAAML,aAAawB,GAAO1B,uBAC5D+B,KAAKxB,MAAM7B,SJsH0B,SAAC4C,GAAD,MAAsB,CAC7D9B,KCtI0C,+BDuI1C8B,gBAAiBA,GIxHKoB,CAA0BpB,IAC9CS,KAAKxB,MAAM7B,SAASmB,EAA0BC,IAC9CiC,KAAKxB,MAAM7B,SAASqB,EAAiCC,IACrD+B,KAAKxB,MAAM7B,SJ+H2B,SAACgD,GAAD,MAAY,CACpDlC,KChJ2C,gCDiJ3C+B,iBAAkBG,GIjIIiB,CAA2BjB,IAC/CK,KAAKxB,MAAM7B,SJ+JiC,SAACgD,GAAD,MAAY,CAC1DlC,KC3KgD,iCD4KhD+B,iBAAkBG,GIjKIkB,CAAiClB,IACrDK,KAAKxB,MAAM7B,SJsGiB,CAC9Bc,KC7HwB,gDG0Bf,IAAAqD,EAAAd,KACH7B,EAAe,KAenB,OAdI6B,KAAKxB,MAAML,eACbA,EAAe6B,KAAKxB,MAAML,aAAa4C,IAAI,SAACC,EAAMC,GAChD,OACExC,EAAAC,EAAAC,cAACuC,EAAD,CACEC,IAAKF,EACL1B,gBAAiByB,EAAKzB,gBACtBxB,gBAAiBiD,EAAKjD,gBACtByB,iBAAkBwB,EAAKxB,iBACvBvB,uBAAwB+C,EAAK/C,uBAC7BwB,OAAQuB,EAAKvB,OACbL,QAAS0B,EAAKV,sBAKpB3B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,wBAAf,oBACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,+BAAf,SACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,wBAAf,SAEDV,UA3CeiD,cAsDThD,cAJS,SAACC,GAAD,MAAY,CAClCF,aAAcE,EAAMF,eAGPC,CAAyBwB,oBCnDzByB,EAdO,SAACC,EAAaC,GAElC,IADA,IAAMC,EAAQ,GACNC,EAAOH,EAAaL,EAAI,EAAGQ,EAAOF,EAAU,EAAGE,IAAQR,IAC7DO,EAAME,KAAK,CACTnC,gBAAiBoC,IAAO,CAAEF,SAAQG,OAAO,UACzC7D,gBAAiB,GACjByB,iBAAkByB,EAClBhD,uBAAwB,GACxBwB,QAAQ,IAIZ,OAAO+B,GCYHK,sBACJ,SAAAA,EAAYrD,GAAO,IAAAqB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6B,IACjBhC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+B,GAAA1B,KAAAH,KAAMxB,KACDsD,WAAajC,EAAKiC,WAAWzB,KAAhBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAClBA,EAAKkC,oBAAsBlC,EAAKkC,oBAAoB1B,KAAzBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAC3BA,EAAKmC,eAAiBnC,EAAKmC,eAAe3B,KAApBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACtBA,EAAKoC,kBAAoBpC,EAAKoC,kBAAkB5B,KAAvBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACzBA,EAAKqC,iBAAmBrC,EAAKqC,iBAAiB7B,KAAtBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACxBA,EAAKsC,sBAAwBtC,EAAKsC,sBAAsB9B,KAA3BP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAC7BA,EAAKuC,SAAWvC,EAAKuC,SAAS/B,KAAdP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAChBA,EAAKwC,sBAAwBxC,EAAKwC,sBAAsBhC,KAA3BP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAC7BA,EAAKyC,uBAAyBzC,EAAKyC,uBAAuBjC,KAA5BP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAC9BA,EAAK0C,mBAAqB1C,EAAK0C,mBAAmBlC,KAAxBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAC1BA,EAAK2C,cAAgB3C,EAAK2C,cAAcnC,KAAnBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAZJA,mFAgBjBG,KAAKxB,MAAM7B,SNb+B,CAC5Cc,KC9ByC,gBK2CnCuC,KAAKxB,MAAMiE,eAAiBzC,KAAKxB,MAAMkE,kBACzC1C,KAAKxB,MAAM7B,SAASe,EAAiBsC,KAAKxB,MAAMkE,mBAE9C1C,KAAKxB,MAAMF,UACb0B,KAAKxB,MAAM7B,SNgK+B,CAC9Cc,KC5LyC,gCK6BrCuC,KAAKxB,MAAM7B,SAASuB,EAAoBmD,EAAcrB,KAAKxB,MAAM8C,YAAatB,KAAKxB,MAAM+C,WAEvFvB,KAAKxB,MAAMD,2BACbxB,QAAQC,MACRgD,KAAKxB,MAAM7B,SAASF,EAAgBuD,KAAKxB,MAAMkE,sEAIzBC,GACxB3C,KAAKxB,MAAM7B,SN7B+B,CAC5Cc,KC9ByC,gBK2DnCuC,KAAKxB,MAAMiE,eAAiBzC,KAAKxB,MAAMkE,kBACzC1C,KAAKxB,MAAM7B,SAASe,EAAiBsC,KAAKxB,MAAMkE,mBAE9CC,EAAUpE,0BACZyB,KAAKxB,MAAM7B,SAASF,EAAgBuD,KAAKxB,MAAMkE,wDAKjD1C,KAAKxB,MAAM7B,SNmEiB,CAC9Bc,KCjIwB,eK8DtBuC,KAAKkC,iEAILlC,KAAKxB,MAAM7B,SN8DiB,CAC9Bc,KCjIwB,eKmEtBuC,KAAKxB,MAAM7B,SNiGyB,CACtCc,KC/JgC,uBK8D9BuC,KAAKxB,MAAM7B,SN0G4B,CACzCc,KCvKoC,2BK6DlCuC,KAAKxB,MAAM7B,SN8H8B,CAC3Cc,KCxLsC,6BK0DpCuC,KAAKkC,sDAILlC,KAAKxB,MAAM7B,SNoH+B,CAC5Cc,KCpLuC,8BKgErCuC,KAAKxB,MAAM7B,SN8G2B,CACxCc,KChLmC,qEKqEjCuC,KAAKxB,MAAM7B,SN0FwB,CACrCc,KCnKuC,qEK2ExB8C,GACb,IAAIqC,EAAOrC,EAAME,OAAOoC,MACxB7C,KAAKxB,MAAM7B,SAASmB,EAA0B8E,IAC9C5C,KAAKxB,MAAM7B,SNyG+B,CAC5Cc,KCpLuC,4EK6EjB8C,GACpB,IAAIuC,EAAcvC,EAAME,OAAOoC,MAC/B7C,KAAKxB,MAAM7B,SAASqB,EAAiC8E,IACrD9C,KAAKxB,MAAM7B,SN8F2B,CACxCc,KChLmC,sEKqFjCuC,KAAKxB,MAAM7B,SNqEyB,CACtCc,KC/JgC,oEK8F9BuC,KAAKxB,MAAM7B,SNyGyB,CACtCc,KChMgC,uBKuF9BuC,KAAKxB,MAAM7B,SAASuB,EAAoBmD,EAAcrB,KAAKxB,MAAM8C,YAAatB,KAAKxB,MAAM+C,WAEzFvB,KAAKsC,0EAILtC,KAAKxB,MAAM7B,SN4GmC,CAChDc,KCxM4C,mFK+F1CuC,KAAKxB,MAAM7B,SNmGmC,CAChDc,KCpM4C,yEKmG9B8C,GACM,UAAdA,EAAMY,KAAmBnB,KAAKxB,MAAMuE,sBAAwB/C,KAAKxB,MAAMwE,kBACzEhD,KAAK+B,uDAKP,IAAIkB,EAAcjD,KAAKxB,MAAM0E,mBAAmBzD,OAAS,6BAA+B,qBACpF0D,EAAkBnD,KAAKxB,MAAM0E,mBAAmBzD,OAAS,SAAW,SACxE,OACEhB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACZmB,KAAKxB,MAAMF,UACVG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBACbJ,EAAAC,EAAAC,cAACC,EAAA,OAAD,CACEwE,GAAG,mBACHC,MAAM,MACNjE,QAASY,KAAKqC,uBAHhB,sBAKA5D,EAAAC,EAAAC,cAACC,EAAA,MAAD,CACE0E,OAAO,sBACPC,aAAc,CAACC,SAAUxD,KAAKsC,wBAC9BmB,QAAS,CACPhF,EAAAC,EAAAC,cAACC,EAAA,OAAD,CACEuC,IAAI,QACJ/B,QAASY,KAAKsC,uBACde,MAAM,MACND,GAAG,0BAJL,SAOA3E,EAAAC,EAAAC,cAACC,EAAA,OAAD,CACEuC,IAAI,UACJ/B,QAASY,KAAKuC,mBACdc,MAAM,QACND,GAAG,4BAJL,YAQFM,KAAM1D,KAAKxB,MAAMmF,iBACjBlF,EAAAC,EAAAC,cAAA,+DAEFF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aAAd,cACAJ,EAAAC,EAAAC,cAACiF,EAAD,OAGFnF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACbJ,EAAAC,EAAAC,cAAA,oBAAYqB,KAAKxB,MAAMqF,iBAAmB7D,KAAKxB,MAAMqF,iBAAmB,IACxEpF,EAAAC,EAAAC,cAACiF,EAAD,QAKNnF,EAAAC,EAAAC,cAACC,EAAA,MAAD,CACE0E,OAAQL,EACRS,KAAM1D,KAAKxB,MAAMsF,UACjBC,aAAW,EACXN,QAAS,CACPhF,EAAAC,EAAAC,cAACC,EAAA,OAAD,CACEwE,GAAG,aACHjC,IAAI,QACJ/B,QAASY,KAAK8B,YAHhB,SAMArD,EAAAC,EAAAC,cAACC,EAAA,OAAD,CACEwE,GAAG,cACHjC,IAAI,cACJ/B,QAASY,KAAK+B,oBACdiC,UAAWhE,KAAKxB,MAAMuE,uBAAyB/C,KAAKxB,MAAMwE,kBACzDG,IAGLI,aAAc,CAACC,SAAUxD,KAAK8B,WAAYmC,MAAOjE,KAAKoC,WACtD3D,EAAAC,EAAAC,cAACC,EAAA,IAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,IAAD,CAAKsF,EAAG,GACNzF,EAAAC,EAAAC,cAACC,EAAA,MAAD,CACEwE,GAAG,kBACHe,aAAmF,IAAtE,CAAC,IAAK,IAAIC,QAAQpE,KAAKxB,MAAM0E,mBAAmBnF,iBAA0B,GAAK,uBAC5FsG,aAAcrE,KAAKxB,MAAM0E,mBAAmBnF,gBAC5C8E,MAAyD,MAAlD7C,KAAKxB,MAAM0E,mBAAmBnF,gBAA0B,GAAKiC,KAAKxB,MAAM0E,mBAAmBnF,gBAClGuG,SAAUtE,KAAKgC,eACfzE,MAAQyC,KAAKxB,MAAMuE,qBAAqD,GAA9B,4BAC1CwB,QAASvE,KAAKxB,MAAMuE,qBAAuB,SAAW,GACtDyB,MAAM,mBACNC,WAAYzE,KAAKwC,iBAGrB/D,EAAAC,EAAAC,cAACC,EAAA,IAAD,CAAKsF,EAAG,GACNzF,EAAAC,EAAAC,cAACC,EAAA,MAAD,CACEwE,GAAG,yBACHe,YAAsE,KAAzDnE,KAAKxB,MAAM0E,mBAAmBjF,uBAAgC,eAAgB,GAC3F4E,MAAgE,KAAzD7C,KAAKxB,MAAM0E,mBAAmBjF,uBAAgC,GAAK+B,KAAKxB,MAAM0E,mBAAmBjF,uBACxGqG,SAAUtE,KAAKmC,sBACfqC,MAAM,2BACNjH,MAAQyC,KAAKxB,MAAMwE,iBAAoC,GAAjB,eACtCuB,QAASvE,KAAKxB,MAAMwE,iBAAmB,SAAU,GACjDyB,WAAYzE,KAAKwC,kBAKvB/D,EAAAC,EAAAC,cAACC,EAAA,IAAD,KACEH,EAAAC,EAAAC,cAAA,gCAAwBqB,KAAKxB,MAAM0E,mBAAmB3D,kBAEvDS,KAAKxB,MAAMkG,iBAAmB,KAAOjG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBAvMxCuC,cA+NRhD,cAjBS,SAACC,GAAD,MAAY,CAClCC,UAAWD,EAAMC,UACjBwF,UAAWzF,EAAMyF,UACjBZ,mBAAoB7E,EAAM6E,mBAC1B/E,aAAcE,EAAMF,aACpB4E,qBAAsB1E,EAAM0E,qBAC5BC,iBAAkB3E,EAAM2E,iBACxBW,gBAAiBtF,EAAMsF,gBACvBrC,YAAajD,EAAMiD,YACnBC,QAASlD,EAAMkD,QACfhD,yBAA0BF,EAAME,yBAChCmE,iBAAkBrE,EAAMqE,iBACxBD,cAAepE,EAAMoE,cACrBoB,iBAAkBxF,EAAMwF,mBAIXzF,CAAyByD,GCxOlC8C,sBACJ,SAAAA,EAAYnG,GAAO,IAAAqB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2E,IACjB9E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6E,GAAAxE,KAAAH,KAAMxB,KACDoG,mBAAqB/E,EAAK+E,mBAAmBvE,KAAxBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAC1BA,EAAKgF,SAAWhF,EAAKgF,SAASxE,KAAdP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAChBA,EAAKiF,YAAcjF,EAAKiF,YAAYzE,KAAjBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACnBA,EAAKkF,cAAgBlF,EAAKkF,cAAc1E,KAAnBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACrBA,EAAKmF,iBAAmBnF,EAAKmF,iBAAiB3E,KAAtBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACxBA,EAAKoF,mBAAqBpF,EAAKoF,mBAAmB5E,KAAxBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAC1BA,EAAK2C,cAAgB3C,EAAK2C,cAAcnC,KAAnBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KARJA,mFAYjBG,KAAKkF,4DAGK3E,GACV,IAAI4E,EAAW5E,EAAME,OAAOoC,MAC5B7C,KAAKxB,MAAM7B,SPgNY,SAACwI,GAAD,MAAe,CACxC1H,KCxN0B,eDyN1B0H,YOlNsBL,CAAYK,IAChCnF,KAAKgF,mBACLhF,KAAKoF,4DAGE7E,GACP,IAAI8E,EAAQ9E,EAAME,OAAOoC,MACzB7C,KAAKxB,MAAM7B,SP+MS,SAAC0I,GAAD,MAAY,CAClC5H,KC7NuB,YD8NvB4H,SOjNsBR,CAASQ,IAC7BrF,KAAK+E,gBACL/E,KAAKoF,sEAILpF,KAAKxB,MAAM7B,SPoNwB,CACrCc,KCtO+B,8DMqB7BuC,KAAKxB,MAAM7B,SP2MqB,CAClCc,KClO4B,sEM0B1BuC,KAAKxB,MAAM7B,SPiN4B,CACzCc,KC1OoC,wED4BV,IAAC4H,EAAOF,EOAhCpI,QAAQC,IAAI,0CAA2CgD,KAAKxB,OACxDwB,KAAKxB,MAAM8G,wBACTtF,KAAKxB,MAAM+G,aACbvF,KAAKxB,MAAM7B,UPHU0I,EOGYrF,KAAKxB,MAAM6G,MPHhBF,EOGuBnF,KAAKxB,MAAM2G,SPHrB,SAACxI,GAEhDM,IAAMU,KADkB,iBACM,CAAC0H,QAAOF,aACnChI,KAAK,SAACC,GAGL,GAFAL,QAAQC,IAAII,GAEkB,iBAA1BA,EAASC,KAAKmI,QAA4B,KAAAC,EACzBrI,EAASC,KAAKqI,YAA5BL,EADuCI,EACvCJ,MAAOM,EADgCF,EAChCE,IACPjJ,EAASU,EAASC,KAAlBX,MAEL,OADAkJ,EAAQlE,KAAK,aACN/E,EAfoB,SAACD,EAAO2I,EAAOM,GAAf,MAAwB,CACzDlI,KCrDmC,wBDsDnCf,QAAO2I,QAAOM,OAaQE,CAAoBnJ,EAAO2I,EAAOM,OAGrDrI,MAAM,SAACC,GACNR,QAAQC,IAAI,uCOTVgD,KAAKxB,MAAM7B,SPuBM,SAAC0I,EAAOF,GAAR,OAAqB,SAACxI,GAE7CM,IAAMU,KADe,cACM,CAAC0H,QAAOF,aAChChI,KAAK,SAACC,GAEL,GADAL,QAAQC,IAAII,GACkB,2BAA1BA,EAASC,KAAKmI,QAAsC,KAAAM,EACnC1I,EAASC,KAAK0I,aAA5BV,EADiDS,EACjDT,MAAOM,EAD0CG,EAC1CH,IACPK,EAAa5I,EAASC,KAAtB2I,UAIL,OAHAjJ,QAAQC,IAAIqI,EAAOM,EAAKK,EAAW,sCAEnCJ,EAAQlE,KAAK,aACN/E,EAnBwC,CACrDc,KC7EgC,qBD8EhC4H,MAiBuCA,EAhBvCjC,GAgB8CuC,EAf9CjJ,MAemDsJ,OAGhD1I,MAAM,SAACC,GACNR,QAAQC,IAAIO,MOtCU0I,CAAUjG,KAAKxB,MAAM6G,MAAOrF,KAAKxB,MAAM2G,4DAOlC,WAAzBnF,KAAKxB,MAAM0H,MAAMC,IACnBnG,KAAKxB,MAAM7B,SPgKuB,CACtCc,KChNgC,uBMgDM,cAAzBuC,KAAKxB,MAAM0H,MAAMC,KAC1BnG,KAAKxB,MAAM7B,SPyJqB,CACpCc,KC5M8B,kEMuD5BuC,KAAKxB,MAAM7B,SP8J0B,CACvCc,KCpNiC,8DMwDnB8C,GACM,UAAdA,EAAMY,KACRnB,KAAKiF,sDAKP,OACExG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAYuE,GAAG,gBAC5B3E,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACbJ,EAAAC,EAAAC,cAACC,EAAA,UAAD,CAAWwH,OAAQpG,KAAKxB,MAAM6H,eAEhC5H,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UAAf,qBACAJ,EAAAC,EAAAC,cAACC,EAAA,IAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,IAAD,CAAKsF,EAAG,IACNzF,EAAAC,EAAAC,cAACC,EAAA,MAAD,CACEnB,KAAK,SACL6I,QAAStG,KAAKxB,MAAM+G,aACpBnG,QAASY,KAAK4E,mBACd2B,QAAQ,WACRC,SAAS,YAIf/H,EAAAC,EAAAC,cAACC,EAAA,IAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,IAAD,CAAK6H,EAAG,EAAGC,OAAO,MAChBjI,EAAAC,EAAAC,cAACC,EAAA,MAAD,CACE4F,MAAM,QACNpB,GAAG,QACHkB,SAAUtE,KAAK6E,SACfN,QAASvE,KAAKxB,MAAMmI,WAAa,SAAW,GAC5CpJ,MAAQyC,KAAKxB,MAAMmI,WAAkC,GAArB,mBAChClC,WAAYzE,KAAKwC,iBAErB/D,EAAAC,EAAAC,cAACC,EAAA,IAAD,CAAK6H,EAAG,EAAGC,OAAO,MAChBjI,EAAAC,EAAAC,cAACC,EAAA,MAAD,CACE4F,MAAM,WACN/G,KAAK,WACL2F,GAAG,WACHkB,SAAUtE,KAAK8E,YACfP,QAASvE,KAAKxB,MAAMoI,cAAgB,SAAW,GAC/CrJ,MAAQyC,KAAKxB,MAAMoI,cAAqH,GAArG,mGACnCnC,WAAYzE,KAAKwC,kBAIvB/D,EAAAC,EAAAC,cAACC,EAAA,IAAD,MAGAH,EAAAC,EAAAC,cAACC,EAAA,IAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,OAAD,CACEyE,MAAM,QACND,GAAG,aACHY,UAAUhE,KAAKxB,MAAM8G,sBACrBlG,QAASY,KAAKiF,oBACbjF,KAAKxB,MAAM+G,aAAe,WAAa,oBAzHzBnE,cA2IZhD,cAVS,SAACC,GAAD,MAAY,CAClCkH,aAAclH,EAAMkH,aACpBoB,WAAYtI,EAAMsI,WAClBC,cAAevI,EAAMuI,cACrBtB,sBAAuBjH,EAAMiH,sBAC7BH,SAAU9G,EAAM8G,SAChBE,MAAOhH,EAAMgH,MACbgB,YAAahI,EAAMgI,cAGNjI,CAAyBuG,GCrJlCkC,sBAEJ,SAAAA,EAAYrI,GAAO,IAAAqB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6G,IACjBhH,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+G,GAAA1G,KAAAH,KAAMxB,KACDF,UAAYuB,EAAKvB,UAAU+B,KAAfP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAFAA,mFAKjBG,KAAKxB,MAAM7B,SRgB+B,CAC5Cc,KC9ByC,gBOclCuC,KAAKxB,MAAMsI,QACd9G,KAAKxB,MAAM7B,SRgGc,SAACA,GAE9BM,IAAMC,IADS,eAEZC,KAAK,SAACC,GAEL,GAAwB,MAApBA,EAASS,QAAkD,SAAhCT,EAASC,KAAKyJ,OAAOjJ,OAClD,OAAOlB,EAV8B,CAC3Cc,KCxGiC,sBDyGjCqJ,OAQuC1J,EAASC,KAAKyJ,WAGlDxJ,MAAM,SAACyJ,GAAD,OAAShK,QAAQC,IAAI+J,2CQpG5B/G,KAAKxB,MAAM7B,SRwGuB,CACpCc,KCxH+B,uDOmB7BV,QAAQC,IAAIgD,KAAKxB,MAAMsI,OAAQ,sBAC/B,IAAIE,EAAS,KAIb,OAHIhH,KAAKxB,MAAMsI,SACbE,EAAM,IAAAlK,OAAOkD,KAAKxB,MAAMD,yBAA2ByB,KAAKxB,MAAMqF,iBAAmB,QAA3E,UAAA/G,OAA2FkD,KAAKxB,MAAMsI,OAAOG,KAA7G,MAAAnK,OAAsHkD,KAAKxB,MAAMsI,OAAOI,OAAxI,MAGNzI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,6BACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAChBJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,eAAb,UACQmI,GAAiB,IADzB,IACgChH,KAAKxB,MAAMD,yBAA6E,oCAAlD,mDAIrEyB,KAAKxB,MAAMD,yBAsBVE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQyE,MAAM,SACZ5E,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,aAAT,cAvBJT,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAACC,EAAA,OAAD,CACEyE,MAAM,SACN5E,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,UAAT,UAIFT,EAAAC,EAAAC,cAACC,EAAA,OAAD,CACEyE,MAAM,SACN5E,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,aAAT,aAKFT,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQyE,MAAM,SACZ5E,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMG,QAASY,KAAK1B,UAAWY,GAAG,aAAlC,mBA/CGkC,cA0EJhD,cAPS,SAACC,GAAD,MAAY,CAClCC,UAAWD,EAAMC,UACjBwI,OAAQzI,EAAMyI,OACdvI,yBAA0BF,EAAME,yBAChCsF,iBAAkBxF,EAAMwF,mBAGXzF,CAAyByI,GCvE3BM,UAAb,SAAAC,GAAA,SAAAD,IAAA,OAAArH,OAAAC,EAAA,EAAAD,CAAAE,KAAAmH,GAAArH,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqH,GAAAE,MAAArH,KAAAsH,YAAA,OAAAxH,OAAAyH,EAAA,EAAAzH,CAAAqH,EAAAC,GAAAtH,OAAA0H,EAAA,EAAA1H,CAAAqH,EAAA,EAAAhG,IAAA,oBAAA0B,MAAA,WAGI,IAAI4E,EAAQpG,EAAcrB,KAAKxB,MAAM8C,YAAatB,KAAKxB,MAAM+C,SAC7DvB,KAAKxB,MAAM7B,SAASuB,EAAoBuJ,IACxCzH,KAAKxB,MAAM7B,STe+B,CAC5Cc,KC9ByC,gBQenCuC,KAAKxB,MAAMiE,eAAiBzC,KAAKxB,MAAMkE,kBACzC1C,KAAKxB,MAAM7B,SAASe,EAAiBsC,KAAKxB,MAAMkE,qBAPtD,CAAAvB,IAAA,SAAA0B,MAAA,WAaI,OACEpE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAAC+I,EAAD,MACAjJ,EAAAC,EAAAC,cAACgJ,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWjB,IACjCpI,EAAAC,EAAAC,cAACgJ,EAAA,EAAD,CAAOE,KAAK,YAAYC,UAAWjG,IACnCpD,EAAAC,EAAAC,cAACgJ,EAAA,EAAD,CAAOE,KAAK,yBAAyBC,UAAWnD,UAnB1DwC,EAAA,CAAyB/F,cAkCV2G,cAAW3J,YARF,SAACC,GAAD,MAAY,CAClCiD,YAAajD,EAAMiD,YACnBC,QAASlD,EAAMkD,QACfkB,cAAepE,EAAMoE,cACrBC,iBAAkBrE,EAAMqE,mBAIAtE,CAAyB+I,4BCzCtCa,EAAe,CAC1BzJ,0BAA0B,EAC1BkE,cAAe,GACfC,iBAAkB,GAClBmB,iBAAkB,GAClB1F,aAAc,GACdG,WAAW,EACX2J,aAAa,EACbnB,OAAQ,KACRxF,YAAa,EACbC,QAAS,GACT2B,mBAAoB,GACpBH,sBAAsB,EACtBC,kBAAkB,EAClBkF,4BAA4B,EAC5BC,mCAAmC,EACnCxE,iBAAiB,EACjB4B,cAAc,EACdJ,SAAU,GACVE,MAAO,GACPsB,YAAY,EACZC,eAAe,EACftB,uBAAuB,WCpBV8C,wBDuBmB,WAAgC,IAA/B/J,EAA+BiJ,UAAAe,OAAA,QAAAC,IAAAhB,UAAA,GAAAA,UAAA,GAAzBU,EAAcO,EAAWjB,UAAAe,OAAA,EAAAf,UAAA,QAAAgB,EAChE,OAAOC,EAAO9K,MACd,ITxB+B,oBSyB7B,OAAOqC,OAAO0I,OAAO,GAAInK,EAAO,CAACC,WAAW,IAE9C,IT5BiC,sBS6B/B,OAAOwB,OAAO0I,OAAO,GAAInK,EAAO,CAACyI,OAAQyB,EAAOzB,SAElD,IT7BwB,aS8BtB,OAAOhH,OAAO0I,OAAO,GAAInK,EAAO,CAACyF,WAAW,IAE9C,IT/BwB,aSgCtB,OAAOhE,OAAO0I,OAAO,GAAInK,EAAO,CAACyF,WAAW,IAE9C,IT7BmC,wBS8BjC,OAAOhE,OAAO0I,OAAO,GAAInK,EAAO,CAACF,aAAcoK,EAAOpK,eAExD,ITnC0C,+BSoCxC,OAAO2B,OAAO0I,OACZ,GACAnK,EACA,CACE6E,mBAAmBpD,OAAA2I,EAAA,EAAA3I,CAAA,GAEdzB,EAAM6E,mBAFO,CAGhBnF,gBAAiBwK,EAAOxK,oBAKhC,ITjD0C,+BSkDxC,OAAO+B,OAAO0I,OACZ,GACAnK,EAAO,CACL6E,mBAAmBpD,OAAA2I,EAAA,EAAA3I,CAAA,GACdzB,EAAM6E,mBADO,CAEhB3D,gBAAiBgJ,EAAOhJ,oBAIhC,ITxDkD,uCSyDhD,OAAOO,OAAO0I,OACZ,GACAnK,EAAO,CACL6E,mBAAmBpD,OAAA2I,EAAA,EAAA3I,CAAA,GACdzB,EAAM6E,mBADO,CAEhBjF,uBAAwBsK,EAAOtK,2BAKvC,ITpE2C,gCSqEzC,OAAO6B,OAAO0I,OACZ,GACAnK,EACA,CACE6E,mBAAmBpD,OAAA2I,EAAA,EAAA3I,CAAA,GACdzB,EAAM6E,mBADO,CAEhB1D,iBAAkB+I,EAAO/I,qBAKjC,IT7EgC,qBS8E9B,IAAKnB,EAAM6E,mBAAmBnF,gBAC5B,OAAOM,EAET,IAAIqK,EAAsBrK,EAAMF,aAAawK,QAK7C,OAJAD,EAAoBrK,EAAM6E,mBAAmB1D,kBAAoBnB,EAAM6E,mBAClE7E,EAAM6E,mBAAmBzD,SAC5BpB,EAAM6E,mBAAmBzD,QAAS,GAE7BK,OAAO0I,OAAO,GAAInK,EAAO,CAC9BF,aAAcuK,EACdxF,mBAAmBpD,OAAA2I,EAAA,EAAA3I,CAAA,GAAKzB,EAAM6E,sBAGlC,IT1FuC,4BS2FrC,OAAOpD,OAAO0I,OAAO,GAAInK,EAAO,CAAC6E,mBAAoB,KAEvD,IT5FoC,yBS8FlC,IAAI/E,EAAeE,EAAMF,aAAawK,QAGtC,OAFAxK,EAAaE,EAAM6E,mBAAmB1D,kBAAkBC,QAAS,EAE1DK,OAAO0I,OAAO,GAAInK,EAAO,CAACF,iBAEnC,ITlGgD,iCSmG9C,OAAO2B,OAAO0I,OACZ,GACAnK,EACA,CACE6E,mBAAmBpD,OAAA2I,EAAA,EAAA3I,CAAA,GACdzB,EAAM6E,mBADO,CAEhBzD,OAAQpB,EAAMF,aAAaoK,EAAO/I,kBAAkBC,WAK5D,IT7GmC,wBS8GjC,IAAIqD,EAAczE,EAAM6E,mBAAmBjF,uBACvC+E,EAAmB,IAAI4F,OAAO,uBAClC,OAAO9I,OAAO0I,OAAO,GAAInK,EAAO,CAAC2E,iBAAkBA,EAAiB6F,KAAK/F,KAE3E,ITjHuC,4BSkHrC,OAAOhD,OAAO0I,OAAO,GAAInK,EAAO,CAAC0E,qBAAsB+F,QAAQzK,EAAM6E,mBAAmBnF,mBAE1F,ITlHyC,8BSmHvC,GAAIM,EAAMC,UAAW,CACnB,IAAIyK,EAAqBC,KAAKC,MAAMC,aAAaC,QAAQ,UACzD,GAAIJ,EACF,OAAOjJ,OAAO0I,OAAO,GAAInK,EAAO,CAACF,aAAc4K,IAGnD,OAAO1K,EAET,IT5HsC,2BSgIpC,OAHIA,EAAMC,WACR4K,aAAaE,QAAQ,QAASJ,KAAKK,UAAUhL,EAAMF,eAE9CE,EAET,IThIgC,qBSiI9B,OAAIA,EAAMC,WACR4K,aAAaE,QAAQ,QAAS,MACvBtJ,OAAO0I,OAAO,GAAInK,EAAO,CAACiL,cAAe,MAE3CjL,EAET,ITtI4C,iCSuI1C,OAAIA,EAAMC,UACDwB,OAAO0I,OAAO,GAAInK,EAAO,CAACsF,iBAAiB,IAE7CtF,EAET,IT3I4C,iCS4I1C,OAAIA,EAAMC,UACDwB,OAAO0I,OAAO,GAAInK,EAAO,CAACsF,iBAAiB,IAE7CtF,EAET,IThJ8B,mBSiJ5B,OAAOyB,OAAO0I,OAAO,GAAInK,EAAO,CAACkH,cAAc,IAEjD,ITlJgC,qBSmJ9B,OAAOzF,OAAO0I,OAAO,GAAInK,EAAO,CAACkH,cAAc,IAEjD,ITpJiC,sBSqJ/B,OAAOzF,OAAO0I,OAAO,GAAInK,EAAO,CAACkH,cAAelH,EAAMkH,eAExD,ITtJ0B,eSuJxB,OAAOzF,OAAO0I,OAAO,GAAInK,EAAO,CAAC8G,SAAUoD,EAAOpD,WAEpD,ITxJuB,YSyJrB,OAAOrF,OAAO0I,OAAO,GAAInK,EAAO,CAACgH,MAAOkD,EAAOlD,QAEjD,IT1J4B,iBS6J1B,OAFmB,IAAIuD,OAAO,6BAEfC,KAAKxK,EAAMgH,OACjBvF,OAAO0I,OAAO,GAAInK,EAAO,CAACsI,YAAY,IAExC7G,OAAO0I,OAAO,GAAInK,EAAO,CAACsI,YAAY,IAE/C,ITjK+B,oBSmK7B,OADsB,IAAIiC,OAAO,uEACfC,KAAKxK,EAAM8G,UACpBrF,OAAO0I,OAAO,GAAInK,EAAO,CAACuI,eAAe,IAE3C9G,OAAO0I,OAAO,GAAInK,EAAO,CAACuI,eAAe,IAElD,ITvKoC,yBSwKlC,OAAIvI,EAAMsI,YAActI,EAAMuI,cACrB9G,OAAO0I,OAAO,GAAInK,EAAO,CAACiH,uBAAuB,IAEnDxF,OAAO0I,OAAO,GAAInK,EAAO,CAACiH,uBAAuB,IAE1D,IT5MyC,cS6MvC,IAAIiE,EAAWP,KAAKC,MAAMC,aAAaC,QAAQ,SAE/C,GADApM,QAAQC,IAAIuM,EAAU,uCAClBA,EAAS,KACN7M,EAAwB6M,EAAxB7M,MAAO2I,EAAiBkE,EAAjBlE,MAAOmE,EAAUD,EAAVC,OAEnB,GAAI9M,GAAS8M,GAAUnE,EACrB,OAAOvF,OAAO0I,OACZ,GAAInK,EAAO,CAACoE,cAAe+G,EAAQ9G,iBAAkBhG,EAAOmH,iBAAkBwB,IAGpF,OAAOhH,EACT,ITtNmC,wBS6NjC,OALA6K,aAAaE,QAAQ,OAAQJ,KAAKK,UAAU,CAC1C3M,MAAO6L,EAAO7L,MACd+M,UAAWlB,EAAOlD,MAClBmE,OAAQjB,EAAOnF,MAEVtD,OAAO0I,OAAO,GAAInK,EAAO,CAACE,0BAA0B,IAC7D,IT/NuC,4BSgOrC,OAAOuB,OAAO0I,OAAO,GAAInK,EAAO,CAACE,0BAA0B,IAC7D,IT/NgC,qBSuO9B,OAPAxB,QAAQC,IAAI,uBAAwBuL,GACpCW,aAAaE,QAAQ,OAAQJ,KAAKK,UAAU,CAC1C3M,MAAO6L,EAAO7L,MACd+M,UAAWlB,EAAOlD,MAClBmE,OAAQjB,EAAOnF,MAEjBrG,QAAQC,IAAIkM,aAAc,+BACnBpJ,OAAO0I,OAAO,GAAInK,EAAO,CAACE,0BAA0B,IAC7D,IT5OoB,SS+OlB,OAFA2K,aAAaE,QAAQ,OAAQ,MAC7BxD,EAAQlE,KAAK,KACN5B,OAAO0I,OAAO,GAAI,CAACjK,0BAA0B,IACtD,QACE,OAAOF,IC1OT2J,EACA0B,8BAAoBC,0BAAgBC,gBCCtCC,IAASC,OAEPrL,EAAAC,EAAAC,cAACoL,EAAA,EAAD,CAAUC,MAAOA,GACfvL,EAAAC,EAAAC,cAACsL,EAAA,EAAD,CAAQrE,QAASA,GACfnH,EAAAC,EAAAC,cAACuL,EAAD,QAGFC,SAASC,eAAe","file":"static/js/main.8d24c6ea.chunk.js","sourcesContent":["import {createBrowserHistory} from 'history';\r\nexport default createBrowserHistory();","import axios from 'axios';\r\nimport history from './../history';\r\nimport * as actionTypes from './actionTypes';\r\n// TODO Get appointments\r\n\r\n\r\nexport const getAppointmentsSuccess = () => ({\r\n  type: actionTypes.GET_APPOINTMENTS_SUCCESS\r\n});\r\n\r\nexport const getAppointments = (token) => (dispatch) => {\r\n  const GET_APPOINTMENTS_ENDPOINT = \"/api/appointments\";\r\n  let headers = {'Authorization': `bearer ${token}`};\r\n  console.log('Inside appointments!');\r\n  axios.get(GET_APPOINTMENTS_ENDPOINT, {}, {headers})\r\n    .then((response) => {\r\n      console.log(response.data);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n\r\n};\r\n\r\n\r\nexport const logout = () => ({\r\n  type: actionTypes.LOGOUT\r\n});\r\n\r\n\r\n\r\nexport const checkTokenAndUserExists = () => ({\r\n  type: actionTypes.CHECK_TOKEN_AND_USER_EXISTS\r\n});\r\n\r\n\r\nexport const authenticateUserSuccess = ({\r\n  type: actionTypes.AUTHENTICATE_USER_SUCCESS\r\n});\r\n\r\n\r\nexport const authenticateUser = (token) => (dispatch) => {\r\n  let AUTH_ENDPOINT = \"/auth/authenticate\";\r\n  let headers = {'Authorization': `bearer ${token}`};\r\n\r\n  axios.post(AUTH_ENDPOINT, {}, {headers})\r\n    .then((authResponse) => {\r\n      console.log(authResponse.status);\r\n      console.log(authResponse.data);\r\n      console.log('INSIDE AUTHENTICATE RESPONSE');\r\n      return dispatch(authenticateUserSuccess());\r\n    });\r\n};\r\n\r\n\r\n\r\nexport const registerUserSuccess = (token, email, _id) => ({\r\n  type: actionTypes.REGISTER_USER_SUCCESS,\r\n  token, email, _id\r\n});\r\n\r\nexport const registerUser = (email, password) => (dispatch) => {\r\n  let REGISTER_ENDPOINT = \"/auth/register\";\r\n  axios.post(REGISTER_ENDPOINT, {email, password})\r\n    .then((response) => {\r\n      console.log(response);\r\n      // dispatch a success action\r\n      if (response.data.message === \"User Created\") {\r\n        let {email, _id} = response.data.createdUser;\r\n        let {token} = response.data;\r\n        history.push('/schedule');\r\n        return dispatch(registerUserSuccess(token, email, _id));\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log('There was an error registering');\r\n      // dispatch a failure action\r\n    });\r\n};\r\n\r\n\r\nexport const loginUserSuccess = (email, id, token) => ({\r\n  type: actionTypes.LOGIN_USER_SUCCESS,\r\n  email,\r\n  id,\r\n  token\r\n});\r\n\r\n\r\nexport const loginUser = (email, password) => (dispatch) => {\r\n  let LOGIN_ENDPOINT = '/auth/login';\r\n  axios.post(LOGIN_ENDPOINT, {email, password})\r\n    .then((response) => {\r\n      console.log(response);\r\n      if (response.data.message === \"Successfully logged in\") {\r\n        let {email, _id} = response.data.loggedInUser;\r\n        let {userToken} = response.data;\r\n        console.log(email, _id, userToken, 'email, _id, usertoken inside login')\r\n        \r\n        history.push('/schedule');\r\n        return dispatch(loginUserSuccess(email, _id, userToken));\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n};\r\n\r\n\r\nexport const getIpInfoSuccess = (ipData) => ({\r\n  type: actionTypes.GET_IP_INFO_SUCCESS,\r\n  ipData\r\n});\r\nexport const getIpInfo = () => (dispatch) => {\r\n  let BASE_URL = '/service/ip';\r\n  axios.get(BASE_URL)\r\n    .then((response) => {\r\n      // console.log(response);\r\n      if (response.status === 200 && response.data.ipData.status !== 'fail') {\r\n        return dispatch(getIpInfoSuccess(response.data.ipData));\r\n      }\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\n\r\nexport const enableGuestMode = () => ({\r\n  type: actionTypes.ENABLE_GUEST_MODE,\r\n});\r\n\r\n\r\n\r\nexport const showModal = () => ({\r\n  type: actionTypes.SHOW_MODAL\r\n});\r\n\r\n\r\nexport const hideModal = () => ({\r\n  type: actionTypes.HIDE_MODAL\r\n});\r\n\r\n\r\n\r\nexport const setCurrentAppointmentTime = (appointmentTime) => ({\r\n  type: actionTypes.SET_CURRENT_APPOINTMENT_TIME,\r\n  appointmentTime: appointmentTime\r\n});\r\n\r\n\r\nexport const setCurrentAppointmentName = (appointmentName) => ({\r\n  type: actionTypes.SET_CURRENT_APPOINTMENT_NAME,\r\n  appointmentName\r\n});\r\n\r\n\r\nexport const setCurrentAppointmentIndex = (index) => ({\r\n  type: actionTypes.SET_CURRENT_APPOINTMENT_INDEX,\r\n  appointmentIndex: index\r\n});\r\n\r\n\r\nexport const setCurrentAppointmentPhoneNumber = (appointmentPhoneNumber) => ({\r\n  type: actionTypes.SET_CURRENT_APPOINTMENT_PHONE_NUMBER,\r\n  appointmentPhoneNumber\r\n});\r\n\r\n\r\nexport const setAppointmentTimes = (appointments) => ({\r\n  type: actionTypes.SET_APPOINTMENT_TIMES,\r\n  appointments\r\n});\r\n\r\n\r\nexport const updateAppointment = () => ({\r\n  type: actionTypes.UPDATE_APPOINTMENT,\r\n});\r\n\r\n\r\nexport const clearAppointment = () => ({\r\n  type: actionTypes.CLEAR_CURRENT_APPOINTMENT\r\n});\r\n\r\n\r\nexport const setAppointmentEdited = () => ({\r\n  type: actionTypes.SET_APPOINTMENT_EDITED\r\n});\r\n\r\n\r\nexport const setCurrentAppointmentEditedState = (index) => ({\r\n  type: actionTypes.SET_CURRENT_APPOINTMENT_EDIT_STATE,\r\n  appointmentIndex: index\r\n});\r\n\r\n\r\nexport const validatePhoneNumber = () => ({\r\n  type: actionTypes.VALIDATE_PHONE_NUMBER\r\n});\r\n\r\n\r\nexport const validateAppointmentName = () => ({\r\n  type: actionTypes.VALIDATE_APPOINTMENT_NAME\r\n});\r\n\r\n\r\nexport const writeAppointmentsCache = () => ({\r\n  type: actionTypes.WRITE_APPOINTMENTS_CACHE\r\n});\r\n\r\n\r\nexport const retrieveAppointmentsCache = () => ({\r\n  type: actionTypes.RETRIEVE_APPOINTMENTS_CACHE\r\n});\r\n\r\n\r\nexport const resetAppointments = () => ({\r\n  type: actionTypes.RESET_APPOINTMENTS\r\n});\r\n\r\n\r\nexport const showDeleteConfirmationModal = () => ({\r\n  type: actionTypes.SHOW_DELETE_CONFIRMATION_MODAL\r\n});\r\n\r\n\r\nexport const hideDeleteConfirmationModal = () => ({\r\n  type: actionTypes.HIDE_DELETE_CONFIRMATION_MODAL\r\n});\r\n\r\n\r\nexport const setRegistration = () => ({\r\n  type: actionTypes.SET_REGISTRATION\r\n});\r\n\r\n\r\nexport const unsetRegistration = () => ({\r\n  type: actionTypes.UNSET_REGISTRATION\r\n});\r\n\r\n\r\nexport const toggleRegistration = () => ({\r\n  type: actionTypes.TOGGLE_REGISTRATION\r\n});\r\n\r\n\r\nexport const setPassword = (password) => ({\r\n  type: actionTypes.SET_PASSWORD,\r\n  password\r\n});\r\n\r\n\r\nexport const setEmail = (email) => ({\r\n  type: actionTypes.SET_EMAIL,\r\n  email\r\n});\r\n\r\n\r\nexport const validateEmail = () => ({\r\n  type: actionTypes.VALIDATE_EMAIL\r\n});\r\n\r\n\r\nexport const validatePassword = () => ({\r\n  type: actionTypes.VALIDATE_PASSWORD\r\n});\r\n\r\n\r\nexport const validateSignInSignUp = () => ({\r\n  type: actionTypes.VALIDATE_SIGNIN_SIGNUP\r\n}); ","export const GET_APPOINTMENTS_SUCCESS = \"GET APPOINTMENTS SUCCESS\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const CHECK_TOKEN_AND_USER_EXISTS = \"CHECK TOKEN\";\r\nexport const AUTHENTICATE_USER_SUCCESS = \"AUTHENTICATE USER SUCCESS\";\r\nexport const REGISTER_USER_SUCCESS = \"REGISTER USER SUCCESS\";\r\nexport const LOGIN_USER_SUCCESS = \"LOGIN USER SUCCESS\";\r\nexport const GET_IP_INFO_SUCCESS = \"GET_IP_INFO_SUCCESS\";\r\nexport const ENABLE_GUEST_MODE = \"ENABLE GUEST MODE\";\r\nexport const SHOW_MODAL = \"SHOW MODAL\";\r\nexport const HIDE_MODAL = \"HIDE MODAL\";\r\nexport const SET_CURRENT_APPOINTMENT_TIME = \"SET CURRENT APPOINTMENT TIME\";\r\nexport const SET_CURRENT_APPOINTMENT_NAME = \"SET CURRENT APPOINTMENT NAME\";\r\nexport const SET_CURRENT_APPOINTMENT_INDEX = \"SET CURRENT APPOINTMENT INDEX\";\r\nexport const SET_CURRENT_APPOINTMENT_PHONE_NUMBER = \"SET CURRENT APPOINTMENT PHONE NUMBER\";\r\nexport const SET_APPOINTMENT_TIMES = \"SET APPOINTMENT TIMES\";\r\nexport const UPDATE_APPOINTMENT = \"UPDATE APPOINTMENT\";\r\nexport const CLEAR_CURRENT_APPOINTMENT = \"CLEAR CURRENT APPOINTMENT\";\r\nexport const SET_APPOINTMENT_EDITED = \"SET APPOINTMENT EDITED\";\r\nexport const SET_CURRENT_APPOINTMENT_EDIT_STATE = \"SET CURRENT APPOINTMENT EDITED\";\r\nexport const VALIDATE_PHONE_NUMBER = \"VALIDATE PHONE NUMBER\";\r\nexport const VALIDATE_APPOINTMENT_NAME = \"VALIDATE APPOINTMENT NAME\";\r\nexport const WRITE_APPOINTMENTS_CACHE = \"WRITE APPOINTMENTS CACHE\";\r\nexport const RETRIEVE_APPOINTMENTS_CACHE = \"RETRIEVE APPOINTMENTS CACHE\";\r\nexport const RESET_APPOINTMENTS = \"RESET APPOINTMENTS\";\r\nexport const SHOW_DELETE_CONFIRMATION_MODAL = \"SHOW DELETE CONFIRMATION MODAL\";\r\nexport const HIDE_DELETE_CONFIRMATION_MODAL = \"HIDE DELETE CONFIRMATION MODAL\";\r\nexport const SET_REGISTRATION = \"SET_REGISTRATION\";\r\nexport const UNSET_REGISTRATION = \"UNSET_REGISTRATION\";\r\nexport const TOGGLE_REGISTRATION = \"TOGGLE REGISTRATION\";\r\nexport const SET_PASSWORD = \"SET PASSWORD\";\r\nexport const SET_EMAIL = \"SET EMAIL\";\r\nexport const VALIDATE_EMAIL = \"VALIDATE EMAIL\";\r\nexport const VALIDATE_PASSWORD = \"VALIDATE PASSWORD\";\r\nexport const VALIDATE_SIGNIN_SIGNUP = \"VALIDATE SIGNIN SIGNUP\";","import React from 'react';\r\nimport {Navbar, NavItem, Button} from 'react-materialize';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {enableGuestMode, logout} from './../actions/appointmentActions';\r\nimport './navbar.css';\r\n\r\nexport const Nav = (props) => {\r\n  return (\r\n    <Navbar className=\"nav\" brand='React Appointment Scheduler' left>\r\n      <NavItem node={<div></div>}>\r\n        <Link className=\"navLink\" to=\"/\">Home</Link>\r\n      </NavItem>\r\n      <NavItem node={<div></div>} href='components.html'>\r\n        {\r\n          props.currentUserAuthenticated | props.guestMode ?\r\n            <Link className=\"navLink\" to=\"/schedule\">Schedule</Link>\r\n            :\r\n            <Link onClick={() => props.dispatch(enableGuestMode())} className=\"navLink\" to=\"/schedule\">Guest</Link>\r\n        }\r\n          \r\n      </NavItem>\r\n      {\r\n        props.currentUserAuthenticated ?\r\n          <NavItem>\r\n            <Button className=\"waves-red waves-effect logOut\" onClick={() => props.dispatch(logout())}>\r\n              Log Out\r\n            </Button>\r\n          </NavItem>\r\n          :\r\n          null\r\n      }\r\n\r\n    </Navbar>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  guestMode: state.guestMode,\r\n  currentUserAuthenticated: state.currentUserAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps)(Nav);","import React from 'react';\r\nimport './appointment.css';\r\n\r\n\r\nconst Appointment = ({appointmentName, appointmentTime, appointmentIndex, appointmentPhoneNumber, edited, onClick}) => {\r\n  let editedClass = `${edited ? 'editedAppointment waves-effect waves-red' : 'newAppointment waves-effect waves-red'} appointmentBody `;\r\n  return (\r\n    <div \r\n      className=\"appointmentContainer\"\r\n      index={appointmentIndex}\r\n      onClick={onClick}>\r\n      <div index={appointmentIndex} className=\"appointment\">\r\n        <div index={appointmentIndex} className={editedClass + 'name'}>{appointmentName ? appointmentName : '+'}</div>\r\n        <div index={appointmentIndex} className={editedClass + 'phoneNumber'}>{appointmentPhoneNumber ? appointmentPhoneNumber : 'Phone number'}</div>\r\n        <div index={appointmentIndex} className={editedClass + 'time'}>{appointmentTime}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Appointment;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Appointment from './appointment';\r\nimport './timeTable.css';\r\nimport {\r\n  showModal, \r\n  setCurrentAppointmentName, \r\n  setCurrentAppointmentIndex,\r\n  setCurrentAppointmentTime,\r\n  setCurrentAppointmentPhoneNumber,\r\n  setCurrentAppointmentEditedState\r\n} from '../actions/appointmentActions';\r\n\r\n\r\nclass TimeTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.appointmentClick = this.appointmentClick.bind(this);\r\n  }\r\n\r\n  appointmentClick(event) {\r\n    let index = parseInt(event.target.getAttribute(\"index\"));\r\n    let appointmentName = this.props.appointments[index].appointmentName;\r\n    let appointmentTime = this.props.appointments[index].appointmentTime;\r\n    let appointmentPhoneNumber = this.props.appointments[index].appointmentPhoneNumber;\r\n    this.props.dispatch(setCurrentAppointmentTime(appointmentTime));\r\n    this.props.dispatch(setCurrentAppointmentName(appointmentName));\r\n    this.props.dispatch(setCurrentAppointmentPhoneNumber(appointmentPhoneNumber));\r\n    this.props.dispatch(setCurrentAppointmentIndex(index));\r\n    this.props.dispatch(setCurrentAppointmentEditedState(index));\r\n    this.props.dispatch(showModal());\r\n\r\n  }\r\n\r\n  render() {\r\n    let appointments = null;\r\n    if (this.props.appointments) {\r\n      appointments = this.props.appointments.map((appt, i) => {\r\n        return (\r\n          <Appointment \r\n            key={i} \r\n            appointmentTime={appt.appointmentTime} \r\n            appointmentName={appt.appointmentName}\r\n            appointmentIndex={appt.appointmentIndex}\r\n            appointmentPhoneNumber={appt.appointmentPhoneNumber}\r\n            edited={appt.edited}\r\n            onClick={this.appointmentClick}/>\r\n        );\r\n      });\r\n    }\r\n    return (\r\n      <div>\r\n        <div className=\"timeTable\">\r\n          <div className=\"appointmentHead name\">Appointment Name</div>\r\n          <div className=\"appointmentHead phoneNumber\">Phone</div>\r\n          <div className=\"appointmentHead time\">Time</div>\r\n        </div>\r\n        {appointments}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  appointments: state.appointments\r\n});\r\n\r\nexport default connect(mapStateToProps)(TimeTable);","import moment from 'moment';\r\n\r\n\r\nconst generateTimes = (initialHour, endHour) =>  {\r\n  const hours = [];\r\n  for(let hour = initialHour, i = 0; hour < endHour + 1; hour++, i++) {\r\n    hours.push({\r\n      appointmentTime: moment({ hour }).format('h:mm A'),\r\n      appointmentName: \"\",\r\n      appointmentIndex: i,\r\n      appointmentPhoneNumber: \"\",\r\n      edited: false\r\n    });\r\n  }\r\n  // console.log(hours);\r\n  return hours;\r\n};\r\nexport default generateTimes;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Modal, Button, Row, Col, Input} from 'react-materialize';\r\nimport {\r\n  hideModal, \r\n  setCurrentAppointmentName,\r\n  setCurrentAppointmentPhoneNumber,\r\n  setAppointmentTimes,\r\n  updateAppointment,\r\n  clearAppointment,\r\n  setAppointmentEdited,\r\n  validateAppointmentName,\r\n  validatePhoneNumber,\r\n  retrieveAppointmentsCache,\r\n  writeAppointmentsCache,\r\n  resetAppointments,\r\n  showDeleteConfirmationModal,\r\n  hideDeleteConfirmationModal,\r\n  getAppointments,\r\n  checkTokenAndUserExists,\r\n  authenticateUser\r\n  \r\n} from './../actions/appointmentActions';\r\nimport TimeTable from './../components/timeTable';\r\nimport generateTimes from './../utils/generateSchedule';\r\nimport './schedule.css';\r\n\r\nclass Schedule extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.closeModal = this.closeModal.bind(this);\r\n    this.closeModalAndUpdate = this.closeModalAndUpdate.bind(this);\r\n    this.updateApptName = this.updateApptName.bind(this);\r\n    this.updateAppointment = this.updateAppointment.bind(this);\r\n    this.clearAppointment = this.clearAppointment.bind(this);\r\n    this.updateApptPhoneNumber = this.updateApptPhoneNumber.bind(this);\r\n    this.validate = this.validate.bind(this);\r\n    this.showConfirmationModal = this.showConfirmationModal.bind(this);\r\n    this.closeConfirmationModal = this.closeConfirmationModal.bind(this);\r\n    this.deleteAppointments = this.deleteAppointments.bind(this);\r\n    this.keyDownSubmit = this.keyDownSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(checkTokenAndUserExists());\r\n    if (this.props.currentUserID && this.props.currentUserToken) {\r\n      this.props.dispatch(authenticateUser(this.props.currentUserToken))\r\n    }\r\n    if (this.props.guestMode) {\r\n      this.props.dispatch(retrieveAppointmentsCache());\r\n    } else {\r\n      this.props.dispatch(setAppointmentTimes(generateTimes(this.props.initialHour, this.props.endHour)));\r\n    }\r\n    if (this.props.currentUserAuthenticated) {\r\n      console.log()\r\n      this.props.dispatch(getAppointments(this.props.currentUserToken));\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.props.dispatch(checkTokenAndUserExists());\r\n    if (this.props.currentUserID && this.props.currentUserToken) {\r\n      this.props.dispatch(authenticateUser(this.props.currentUserToken));\r\n    }\r\n    if (nextProps.currentUserAuthenticated) {\r\n      this.props.dispatch(getAppointments(this.props.currentUserToken));\r\n    }\r\n  }\r\n\r\n  closeModal() {\r\n    this.props.dispatch(hideModal());\r\n    this.clearAppointment();\r\n  }\r\n  \r\n  closeModalAndUpdate() {\r\n    this.props.dispatch(hideModal());\r\n    this.props.dispatch(updateAppointment());\r\n    this.props.dispatch(setAppointmentEdited());\r\n    this.props.dispatch(writeAppointmentsCache());\r\n    this.clearAppointment();\r\n  }\r\n\r\n  validate() {\r\n    this.props.dispatch(validateAppointmentName());\r\n    this.props.dispatch(validatePhoneNumber());\r\n  }\r\n\r\n  clearAppointment() {\r\n    this.props.dispatch(clearAppointment());\r\n  }\r\n\r\n  updateApptName(event) {\r\n    let name = event.target.value;\r\n    this.props.dispatch(setCurrentAppointmentName(name));\r\n    this.props.dispatch(validateAppointmentName());\r\n  }\r\n\r\n  updateApptPhoneNumber(event) {\r\n    let phoneNumber = event.target.value;\r\n    this.props.dispatch(setCurrentAppointmentPhoneNumber(phoneNumber));\r\n    this.props.dispatch(validatePhoneNumber());\r\n  }\r\n\r\n  updateAppointment() {\r\n    this.props.dispatch(updateAppointment());\r\n    \r\n  }\r\n\r\n  deleteAppointments() {\r\n    this.props.dispatch(resetAppointments());\r\n    this.props.dispatch(setAppointmentTimes(generateTimes(this.props.initialHour, this.props.endHour)));\r\n\r\n    this.closeConfirmationModal();\r\n  }\r\n\r\n  closeConfirmationModal () {\r\n    this.props.dispatch(hideDeleteConfirmationModal());\r\n  }\r\n\r\n  showConfirmationModal () {\r\n    this.props.dispatch(showDeleteConfirmationModal());\r\n  }\r\n\r\n  keyDownSubmit(event) {\r\n    if (event.key === \"Enter\" && this.props.appointmentNameValid && this.props.phoneNumberValid) {\r\n      this.closeModalAndUpdate();\r\n    }\r\n  }\r\n    \r\n  render() {\r\n    let modalHeader = this.props.currentAppointment.edited ? 'Update Appointment Details' : 'Create Appointment';\r\n    let modalButtonText = this.props.currentAppointment.edited ? 'Update' : 'Create';\r\n    return (\r\n      <div className=\"slowPopIn\">\r\n        <div className=\"scheduleContainer\">\r\n          {this.props.guestMode ? (\r\n            <div className=\"guestModeContainer\">\r\n              <Button \r\n                id=\"appointmentReset\"\r\n                waves=\"red\"\r\n                onClick={this.showConfirmationModal}>Reset Appointments\r\n              </Button>\r\n              <Modal\r\n                header=\"Delete Appointments\"\r\n                modalOptions={{complete: this.closeConfirmationModal}}\r\n                actions={[\r\n                  <Button \r\n                    key=\"close\" \r\n                    onClick={this.closeConfirmationModal}\r\n                    waves=\"red\"\r\n                    id=\"closeConfirmationModal\">\r\n                  Close\r\n                  </Button>,\r\n                  <Button \r\n                    key=\"confirm\"\r\n                    onClick={this.deleteAppointments}\r\n                    waves=\"green\"\r\n                    id=\"confirmConfirmationModal\">\r\n                  Confirm\r\n                  </Button>\r\n                ]}\r\n                open={this.props.showDeleteModal}>\r\n                <p>Are you sure you want to delete all appointments?</p>\r\n              </Modal>\r\n              <h5 className=\"guestMode\">Guest mode</h5>\r\n              <TimeTable/>\r\n            </div>\r\n          ):\r\n            <div className=\"authenticated\">\r\n              <p>Welcome {this.props.currentUserEmail ? this.props.currentUserEmail : ''}</p>\r\n              <TimeTable/>\r\n            </div>\r\n          }\r\n        </div>\r\n\r\n        <Modal\r\n          header={modalHeader}\r\n          open={this.props.showModal}\r\n          fixedFooter\r\n          actions={[\r\n            <Button \r\n              id=\"closeModal\" \r\n              key=\"close\" \r\n              onClick={this.closeModal}>\r\n              Close\r\n            </Button>,\r\n            <Button \r\n              id=\"updateModal\" \r\n              key=\"updateModal\" \r\n              onClick={this.closeModalAndUpdate}\r\n              disabled={!this.props.appointmentNameValid || !this.props.phoneNumberValid}>\r\n              {modalButtonText}\r\n            </Button>\r\n          ]}\r\n          modalOptions={{complete: this.closeModal, ready: this.validate}}>\r\n          <Row>\r\n            <Col l={6}>\r\n              <Input\r\n                id=\"appointmentName\"\r\n                placeholder={['+', ''].indexOf(this.props.currentAppointment.appointmentName) === -1 ? '' : 'Enter an appointment'}\r\n                defaultValue={this.props.currentAppointment.appointmentName}\r\n                value={this.props.currentAppointment.appointmentName === '+' ? '' : this.props.currentAppointment.appointmentName}\r\n                onChange={this.updateApptName}\r\n                error={!this.props.appointmentNameValid ? 'Enter an appointment name' : ''}\r\n                success={this.props.appointmentNameValid ? '\\u2713' : ''}\r\n                label=\"Appointment Name\"\r\n                onKeyPress={this.keyDownSubmit}>\r\n              </Input>\r\n            </Col>\r\n            <Col l={6}>\r\n              <Input\r\n                id=\"appointmentPhoneNumber\"\r\n                placeholder={this.props.currentAppointment.appointmentPhoneNumber === '' ? '123-123-5123': ''}\r\n                value={this.props.currentAppointment.appointmentPhoneNumber === '' ? '' : this.props.currentAppointment.appointmentPhoneNumber}\r\n                onChange={this.updateApptPhoneNumber}\r\n                label=\"Appointment Phone Number\"\r\n                error={!this.props.phoneNumberValid ? '123-456-7890' : ''}\r\n                success={this.props.phoneNumberValid ? '\\u2713': ''}\r\n                onKeyPress={this.keyDownSubmit}>\r\n              </Input>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <div>Appointment Time: {this.props.currentAppointment.appointmentTime}</div>\r\n          </Row>\r\n          {this.props.appointmentValid ? null : <div className=\"error\"></div>}\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  guestMode: state.guestMode,\r\n  showModal: state.showModal,\r\n  currentAppointment: state.currentAppointment,\r\n  appointments: state.appointments,\r\n  appointmentNameValid: state.appointmentNameValid,\r\n  phoneNumberValid: state.phoneNumberValid,\r\n  showDeleteModal: state.showDeleteModal,\r\n  initialHour: state.initialHour,\r\n  endHour: state.endHour,\r\n  currentUserAuthenticated: state.currentUserAuthenticated,\r\n  currentUserToken: state.currentUserToken,\r\n  currentUserID: state.currentUserID,\r\n  currentUserEmail: state.currentUserEmail\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps)(Schedule);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Row, Col, Input, Button, Preloader} from 'react-materialize';\r\nimport {\r\n  toggleRegistration,\r\n  unsetRegistration,\r\n  setRegistration,\r\n  setPassword,\r\n  setEmail,\r\n  validateEmail,\r\n  validatePassword,\r\n  validateSignInSignUp,\r\n  registerUser,\r\n  loginUser\r\n} from './../actions/appointmentActions';\r\nimport './signUpSignIn.css';\r\n\r\n\r\nclass SignUpSignIn extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggleRegistration = this.toggleRegistration.bind(this);\r\n    this.setEmail = this.setEmail.bind(this);\r\n    this.setPassword = this.setPassword.bind(this);\r\n    this.validateEmail = this.validateEmail.bind(this);\r\n    this.validatePassword = this.validatePassword.bind(this);\r\n    this.handleSignUpSignIn = this.handleSignUpSignIn.bind(this);\r\n    this.keyDownSubmit = this.keyDownSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.determineRegistration();\r\n  }\r\n\r\n  setPassword(event) {\r\n    let password = event.target.value;\r\n    this.props.dispatch(setPassword(password));\r\n    this.validatePassword();\r\n    this.validateSignInSignUpForm();\r\n  }\r\n\r\n  setEmail(event) {\r\n    let email = event.target.value;\r\n    this.props.dispatch(setEmail(email));\r\n    this.validateEmail();\r\n    this.validateSignInSignUpForm();\r\n  }\r\n\r\n  validatePassword() {\r\n    this.props.dispatch(validatePassword());\r\n  }\r\n\r\n  validateEmail() {\r\n    this.props.dispatch(validateEmail());\r\n  }\r\n\r\n  validateSignInSignUpForm() {\r\n    this.props.dispatch(validateSignInSignUp());\r\n  }\r\n\r\n  handleSignUpSignIn() {\r\n    console.log('this.props inside handle signup sign in', this.props);\r\n    if (this.props.signInSignUpFormValid) {\r\n      if (this.props.registration) {\r\n        this.props.dispatch(registerUser(this.props.email, this.props.password));\r\n      } else {\r\n        this.props.dispatch(loginUser(this.props.email, this.props.password));\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  determineRegistration() {\r\n    if (this.props.match.url === '/login') {\r\n      this.props.dispatch(unsetRegistration());\r\n    } else if (this.props.match.url === '/register') {\r\n      this.props.dispatch(setRegistration());\r\n    }\r\n  }\r\n\r\n  toggleRegistration() {\r\n    this.props.dispatch(toggleRegistration());\r\n  }\r\n\r\n  keyDownSubmit(event) {\r\n    if (event.key === \"Enter\") {\r\n      this.handleSignUpSignIn();\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"slowPopIn\" id=\"signUpSignIn\">\r\n        <div className=\"modal-overlay\">\r\n          <Preloader active={this.props.loaderState}></Preloader>\r\n        </div>\r\n        <div className=\"choice\">I would like to: </div>\r\n        <Row>\r\n          <Col l={12}>\r\n            <Input \r\n              type=\"switch\"\r\n              checked={this.props.registration}\r\n              onClick={this.toggleRegistration}\r\n              onLabel=\"Register\"\r\n              offLabel=\"Login\"/>\r\n          </Col>\r\n\r\n        </Row>\r\n        <Row>\r\n          <Col m={6} offset=\"m5\">\r\n            <Input\r\n              label=\"Email\"\r\n              id=\"email\"\r\n              onChange={this.setEmail}\r\n              success={this.props.emailValid ? '\\u2713' : ''}\r\n              error={!this.props.emailValid ? 'Email is invalid' : ''}\r\n              onKeyPress={this.keyDownSubmit}/>\r\n          </Col>\r\n          <Col m={6} offset=\"m5\">\r\n            <Input\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              onChange={this.setPassword}\r\n              success={this.props.passwordValid ? '\\u2713' : ''}\r\n              error={!this.props.passwordValid ? 'Between 6 and 20 characters. Must contain a lowercase, uppercase, number, and special character.' : ''}\r\n              onKeyPress={this.keyDownSubmit}/>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          \r\n        </Row>\r\n        <Row>\r\n          <Button \r\n            waves=\"green\" \r\n            id=\"authSubmit\"\r\n            disabled={this.props.signInSignUpFormValid ? false : true}\r\n            onClick={this.handleSignUpSignIn}>\r\n            {this.props.registration ? 'Register' : 'Sign In'}\r\n          </Button>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  registration: state.registration,\r\n  emailValid: state.emailValid,\r\n  passwordValid: state.passwordValid,\r\n  signInSignUpFormValid: state.signInSignUpFormValid,\r\n  password: state.password,\r\n  email: state.email,\r\n  loaderState: state.loaderState\r\n});\r\n\r\nexport default connect(mapStateToProps)(SignUpSignIn);\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Button} from 'react-materialize';\r\nimport {Link} from 'react-router-dom';\r\nimport {enableGuestMode, checkTokenAndUserExists} from './../actions/appointmentActions';\r\nimport './home.css';\r\nimport {getIpInfo} from './..//actions/appointmentActions';\r\n\r\nclass Home extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.guestMode = this.guestMode.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(checkTokenAndUserExists());\r\n    if (!this.props.ipData) {\r\n      this.props.dispatch(getIpInfo());\r\n    }\r\n  }\r\n\r\n  guestMode() {\r\n    this.props.dispatch(enableGuestMode());\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.ipData, 'ipdata in home.js!');\r\n    let ipInfo = null;\r\n    if (this.props.ipData) {\r\n      ipInfo = ` ${this.props.currentUserAuthenticated ? this.props.currentUserEmail : 'guest'} from ${this.props.ipData.city}, ${this.props.ipData.region}!`;\r\n    }\r\n    return (\r\n      <div className=\"headerContainer slowPopIn\">\r\n        <header className=\"App-header\">\r\n          <p className=\"welcomeText\">\r\n          Welcome{ipInfo ? ipInfo: '!'} {!this.props.currentUserAuthenticated ? 'Please login or try out the app in Guest Mode!': 'Please continue to your schedule!'}\r\n          </p>\r\n        </header>\r\n        {\r\n          !this.props.currentUserAuthenticated ?\r\n            <div className=\"welcome\">\r\n              <Button \r\n                waves=\"green\">\r\n                <Link to=\"/login\">\r\n                Login\r\n                </Link>\r\n              </Button>\r\n              <Button \r\n                waves=\"green\">\r\n                <Link to=\"/register\">\r\n                Register\r\n                </Link>\r\n              </Button>\r\n              \r\n              <Button waves=\"green\">\r\n                <Link onClick={this.guestMode} to=\"/schedule\">\r\n                Guest\r\n                </Link>\r\n              </Button>\r\n            </div>\r\n            :\r\n            <div className=\"welcome\">\r\n              <Button waves=\"green\">\r\n                <Link to=\"/schedule\">\r\n                Schedule\r\n                </Link>\r\n              </Button>\r\n            </div>\r\n        }\r\n      \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  guestMode: state.guestMode,\r\n  ipData: state.ipData,\r\n  currentUserAuthenticated: state.currentUserAuthenticated,\r\n  currentUserEmail: state.currentUserEmail\r\n});\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Route, withRouter} from 'react-router-dom';\r\nimport Nav from './components/navbar';\r\nimport Schedule from './pages/schedule';\r\nimport SignUpSignIn from './pages/signUpSignIn';\r\nimport Home from './pages/home';\r\nimport {setAppointmentTimes, checkTokenAndUserExists, authenticateUser} from './actions/appointmentActions';\r\nimport generateTimes from './utils/generateSchedule';\r\nimport './App.css';\r\n\r\nexport class App extends Component {\r\n\r\n  componentDidMount() {\r\n    let times = generateTimes(this.props.initialHour, this.props.endHour);\r\n    this.props.dispatch(setAppointmentTimes(times));\r\n    this.props.dispatch(checkTokenAndUserExists());\r\n    if (this.props.currentUserID && this.props.currentUserToken) {\r\n      this.props.dispatch(authenticateUser(this.props.currentUserToken));\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"headerContainer\">\r\n          <Nav/>\r\n          <Route exact path=\"/\" component={Home}/>\r\n          <Route path=\"/schedule\" component={Schedule}/>\r\n          <Route path=\"/:path(login|register)\" component={SignUpSignIn}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialHour: state.initialHour,\r\n  endHour: state.endHour,\r\n  currentUserID: state.currentUserID,\r\n  currentUserToken: state.currentUserToken\r\n});\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps)(App));","/* eslint-disable no-case-declarations */\r\nimport * as actionTypes from '../actions/actionTypes';\r\nimport history from './../history';\r\n\r\nexport const initialState = {\r\n  currentUserAuthenticated: false,\r\n  currentUserID: '',\r\n  currentUserToken: '',\r\n  currentUserEmail: '',\r\n  appointments: [],\r\n  guestMode: false,\r\n  ipAvailable: false,\r\n  ipData: null,\r\n  initialHour: 9,\r\n  endHour: 17,\r\n  currentAppointment: {},\r\n  appointmentNameValid: false,\r\n  phoneNumberValid: false,\r\n  appointmentNameFormTouched: false,\r\n  appointmentPhoneNumberFormTouched: false,\r\n  showDeleteModal: false,\r\n  registration: false,\r\n  password: \"\",\r\n  email: \"\",\r\n  emailValid: false,\r\n  passwordValid: false,\r\n  signInSignUpFormValid: false\r\n};\r\n\r\nexport const appointmentReducer = (state=initialState, action) => {\r\n  switch(action.type) {\r\n  case actionTypes.ENABLE_GUEST_MODE:\r\n    return Object.assign({}, state, {guestMode: true});\r\n\r\n  case actionTypes.GET_IP_INFO_SUCCESS:\r\n    return Object.assign({}, state, {ipData: action.ipData});\r\n\r\n  case actionTypes.SHOW_MODAL:\r\n    return Object.assign({}, state, {showModal: true});\r\n\r\n  case actionTypes.HIDE_MODAL:\r\n    return Object.assign({}, state, {showModal: false});\r\n  \r\n  case actionTypes.SET_APPOINTMENT_TIMES:\r\n    return Object.assign({}, state, {appointments: action.appointments});\r\n\r\n  case actionTypes.SET_CURRENT_APPOINTMENT_NAME:\r\n    return Object.assign(\r\n      {}, \r\n      state, \r\n      {\r\n        currentAppointment: \r\n        {\r\n          ...state.currentAppointment,\r\n          appointmentName: action.appointmentName\r\n        }\r\n      }\r\n    );\r\n\r\n  case actionTypes.SET_CURRENT_APPOINTMENT_TIME:\r\n    return Object.assign(\r\n      {}, \r\n      state, {\r\n        currentAppointment: {\r\n          ...state.currentAppointment,\r\n          appointmentTime: action.appointmentTime, \r\n        }\r\n      });\r\n\r\n  case actionTypes.SET_CURRENT_APPOINTMENT_PHONE_NUMBER:\r\n    return Object.assign(\r\n      {},\r\n      state, {\r\n        currentAppointment: {\r\n          ...state.currentAppointment,\r\n          appointmentPhoneNumber: action.appointmentPhoneNumber,\r\n        }\r\n      }\r\n    );\r\n\r\n  case actionTypes.SET_CURRENT_APPOINTMENT_INDEX:\r\n    return Object.assign(\r\n      {},\r\n      state,\r\n      {\r\n        currentAppointment: {\r\n          ...state.currentAppointment,\r\n          appointmentIndex: action.appointmentIndex\r\n        }\r\n      }\r\n    );\r\n\r\n  case actionTypes.UPDATE_APPOINTMENT:\r\n    if (!state.currentAppointment.appointmentName) {\r\n      return state;\r\n    }\r\n    let updatedAppointments = state.appointments.slice();\r\n    updatedAppointments[state.currentAppointment.appointmentIndex] = state.currentAppointment;\r\n    if (!state.currentAppointment.edited) {\r\n      state.currentAppointment.edited = true;\r\n    }\r\n    return Object.assign({}, state, {\r\n      appointments: updatedAppointments,\r\n      currentAppointment: {...state.currentAppointment}\r\n    });\r\n\r\n  case actionTypes.CLEAR_CURRENT_APPOINTMENT:\r\n    return Object.assign({}, state, {currentAppointment: {}});\r\n\r\n  case actionTypes.SET_APPOINTMENT_EDITED:\r\n\r\n    let appointments = state.appointments.slice();\r\n    appointments[state.currentAppointment.appointmentIndex].edited = true;\r\n\r\n    return Object.assign({}, state, {appointments});\r\n  \r\n  case actionTypes.SET_CURRENT_APPOINTMENT_EDIT_STATE:\r\n    return Object.assign(\r\n      {},\r\n      state,\r\n      {\r\n        currentAppointment: {\r\n          ...state.currentAppointment,\r\n          edited: state.appointments[action.appointmentIndex].edited\r\n        }\r\n      }\r\n    );\r\n\r\n  case actionTypes.VALIDATE_PHONE_NUMBER:\r\n    let phoneNumber = state.currentAppointment.appointmentPhoneNumber;\r\n    let phoneNumberValid = new RegExp(/^\\d{3}-\\d{3}-\\d{4}$/);\r\n    return Object.assign({}, state, {phoneNumberValid: phoneNumberValid.test(phoneNumber)});\r\n\r\n  case actionTypes.VALIDATE_APPOINTMENT_NAME:\r\n    return Object.assign({}, state, {appointmentNameValid: Boolean(state.currentAppointment.appointmentName)});\r\n\r\n  case actionTypes.RETRIEVE_APPOINTMENTS_CACHE:\r\n    if (state.guestMode) {\r\n      let cachedAppointments = JSON.parse(localStorage.getItem(\"guest\"));\r\n      if (cachedAppointments) {\r\n        return Object.assign({}, state, {appointments: cachedAppointments});\r\n      }\r\n    }\r\n    return state;\r\n\r\n  case actionTypes.WRITE_APPOINTMENTS_CACHE:\r\n    if (state.guestMode) {\r\n      localStorage.setItem(\"guest\", JSON.stringify(state.appointments));\r\n    }\r\n    return state;\r\n\r\n  case actionTypes.RESET_APPOINTMENTS:\r\n    if (state.guestMode) {\r\n      localStorage.setItem(\"guest\", null);\r\n      return Object.assign({}, state, {apppointments: []});\r\n    }\r\n    return state;\r\n\r\n  case actionTypes.SHOW_DELETE_CONFIRMATION_MODAL:\r\n    if (state.guestMode) {\r\n      return Object.assign({}, state, {showDeleteModal: true});\r\n    }\r\n    return state;\r\n\r\n  case actionTypes.HIDE_DELETE_CONFIRMATION_MODAL:\r\n    if (state.guestMode) {\r\n      return Object.assign({}, state, {showDeleteModal: false});\r\n    }\r\n    return state;\r\n\r\n  case actionTypes.SET_REGISTRATION:\r\n    return Object.assign({}, state, {registration: true});\r\n\r\n  case actionTypes.UNSET_REGISTRATION:\r\n    return Object.assign({}, state, {registration: false});\r\n\r\n  case actionTypes.TOGGLE_REGISTRATION:\r\n    return Object.assign({}, state, {registration: !state.registration});\r\n\r\n  case actionTypes.SET_PASSWORD:\r\n    return Object.assign({}, state, {password: action.password});\r\n\r\n  case actionTypes.SET_EMAIL:\r\n    return Object.assign({}, state, {email: action.email});\r\n\r\n  case actionTypes.VALIDATE_EMAIL:\r\n    const emailValid = new RegExp(/^.+@{1}.+\\.[a-zA-Z]{2,4}$/);\r\n    \r\n    if (emailValid.test(state.email)) {\r\n      return Object.assign({}, state, {emailValid: true});\r\n    }\r\n    return Object.assign({}, state, {emailValid: false});\r\n\r\n  case actionTypes.VALIDATE_PASSWORD:\r\n    const passwordValid = new RegExp(/((?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$?%!/\\{\\}\\[\\]\\(\\)]).{6,20})/);\r\n    if (passwordValid.test(state.password)) {\r\n      return Object.assign({}, state, {passwordValid: true});\r\n    }\r\n    return Object.assign({}, state, {passwordValid: false});\r\n\r\n  case actionTypes.VALIDATE_SIGNIN_SIGNUP:\r\n    if (state.emailValid && state.passwordValid) {\r\n      return Object.assign({}, state, {signInSignUpFormValid: true});\r\n    }\r\n    return Object.assign({}, state, {signInSignUpFormValid: false});\r\n  \r\n  case actionTypes.CHECK_TOKEN_AND_USER_EXISTS:\r\n    let authInfo = JSON.parse(localStorage.getItem(\"auth\"));\r\n    console.log(authInfo, 'auth info inside check token action');\r\n    if (authInfo){\r\n      let {token, email, userID} = authInfo;\r\n      \r\n      if (token && userID && email) {\r\n        return Object.assign(\r\n          {}, state, {currentUserID: userID, currentUserToken: token, currentUserEmail: email});\r\n      }\r\n    }\r\n    return state;\r\n  case actionTypes.REGISTER_USER_SUCCESS:\r\n    \r\n    localStorage.setItem(\"auth\", JSON.stringify({\r\n      token: action.token,\r\n      userEmail: action.email,\r\n      userID: action.id\r\n    }));\r\n    return Object.assign({}, state, {currentUserAuthenticated: true});\r\n  case actionTypes.AUTHENTICATE_USER_SUCCESS:\r\n    return Object.assign({}, state, {currentUserAuthenticated: true});\r\n  case actionTypes.LOGIN_USER_SUCCESS:\r\n    console.log('action in login user', action)\r\n    localStorage.setItem(\"auth\", JSON.stringify({\r\n      token: action.token,\r\n      userEmail: action.email,\r\n      userID: action.id\r\n    }));\r\n    console.log(localStorage, 'local storage in login user');\r\n    return Object.assign({}, state, {currentUserAuthenticated: true});\r\n  case actionTypes.LOGOUT:\r\n    localStorage.setItem(\"auth\", null);\r\n    history.push('/');\r\n    return Object.assign({}, {currentUserAuthenticated: false});\r\n  default:\r\n    return state;\r\n  }\r\n};","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {appointmentReducer, initialState} from './reducers/appointmentReducer';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\n  \r\nexport default createStore(\r\n  appointmentReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {Provider} from 'react-redux';\r\nimport store from './store';\r\nimport {Router} from 'react-router-dom';\r\nimport history from './history';\r\n\r\n\r\nReactDOM.render(\r\n  \r\n  <Provider store={store}>  \r\n    <Router history={history}>\r\n      <App />\r\n    </Router>\r\n  </Provider>\r\n  , document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}