{"version":3,"sources":["history.js","actions/appointmentActions.js","actions/actionTypes.js","components/navbar.js","components/appointment.js","components/timeTable.js","utils/generateSchedule.js","pages/schedule.js","pages/signUpSignIn.js","pages/home.js","App.js","reducers/appointmentReducer.js","store.js","index.js"],"names":["createBrowserHistory","getAppointments","token","dispatch","headers","Authorization","concat","console","log","axios","get","then","response","data","catch","error","authenticateUserSuccess","type","setCurrentAppointmentName","appointmentName","setCurrentAppointmentPhoneNumber","appointmentPhoneNumber","setAppointmentTimes","appointments","connect","state","guestMode","currentUserAuthenticated","props","react_default","a","createElement","lib","className","brand","left","node","Link","to","href","onClick","Appointment","_ref","appointmentTime","appointmentIndex","edited","editedClass","index","TimeTable","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","appointmentClick","bind","assertThisInitialized","event","parseInt","target","getAttribute","setCurrentAppointmentTime","setCurrentAppointmentIndex","setCurrentAppointmentEditedState","_this2","map","appt","i","components_appointment","key","Component","generateTimes","initialHour","endHour","hours","hour","push","moment","format","Schedule","closeModal","closeModalAndUpdate","updateApptName","updateAppointment","clearAppointment","updateApptPhoneNumber","validate","showConfirmationModal","closeConfirmationModal","deleteAppointments","currentUserToken","nextProps","name","value","phoneNumber","modalHeader","currentAppointment","modalButtonText","id","waves","header","modalOptions","complete","actions","open","showDeleteModal","components_timeTable","currentUserEmail","showModal","fixedFooter","disabled","appointmentNameValid","phoneNumberValid","ready","l","placeholder","indexOf","defaultValue","onChange","success","label","appointmentValid","currentUserID","SignUpSignIn","toggleRegistration","setEmail","setPassword","validateEmail","validatePassword","handleSignUpSignIn","determineRegistration","password","validateSignInSignUpForm","email","signInSignUpFormValid","registration","post","message","_response$data$create","createdUser","_id","history","registerUserSuccess","_response$data$logged","loggedInUser","userToken","loginUser","match","url","checked","onLabel","offLabel","m","offset","emailValid","passwordValid","Home","ipData","status","err","ipInfo","city","region","App","_Component","apply","arguments","inherits","createClass","times","authResponse","components_navbar","Route","exact","path","component","withRouter","initialState","ipAvailable","appointmentNameFormTouched","appointmentPhoneNumberFormTouched","createStore","length","undefined","action","assign","objectSpread","updatedAppointments","slice","RegExp","test","Boolean","cachedAppointments","JSON","parse","localStorage","getItem","setItem","stringify","apppointments","authInfo","userID","userEmail","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","es","store","Router","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.dccc4b73.chunk.js","sourcesContent":["import {createBrowserHistory} from 'history';\r\nexport default createBrowserHistory();","import axios from 'axios';\r\nimport history from './../history';\r\nimport * as actionTypes from './actionTypes';\r\n// TODO Get appointments\r\n\r\n\r\nexport const getAppointmentsSuccess = () => ({\r\n  type: actionTypes.GET_APPOINTMENTS_SUCCESS\r\n});\r\n\r\nexport const getAppointments = (token) => (dispatch) => {\r\n  const GET_APPOINTMENTS_ENDPOINT = \"/api/appointments\";\r\n  let headers = {'Authorization': `bearer ${token}`};\r\n  console.log('Inside appointments!');\r\n  axios.get(GET_APPOINTMENTS_ENDPOINT, {}, {headers})\r\n    .then((response) => {\r\n      console.log(response.data);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n\r\n};\r\n\r\n\r\nexport const logout = () => ({\r\n  type: actionTypes.LOGOUT\r\n});\r\n\r\n\r\n\r\nexport const checkTokenAndUserExists = () => ({\r\n  type: actionTypes.CHECK_TOKEN_AND_USER_EXISTS\r\n});\r\n\r\n\r\nexport const authenticateUserSuccess = ({\r\n  type: actionTypes.AUTHENTICATE_USER_SUCCESS\r\n});\r\n\r\n\r\nexport const authenticateUser = (token) => (dispatch) => {\r\n  let AUTH_ENDPOINT = \"/auth/authenticate\";\r\n  let headers = {'Authorization': `bearer ${token}`};\r\n\r\n  axios.post(AUTH_ENDPOINT, {}, {headers})\r\n    .then((authResponse) => {\r\n      console.log(authResponse.status);\r\n      console.log(authResponse.data);\r\n      console.log('INSIDE AUTHENTICATE RESPONSE');\r\n      return dispatch(authenticateUserSuccess());\r\n    });\r\n};\r\n\r\n\r\n\r\nexport const registerUserSuccess = (token, email, _id) => ({\r\n  type: actionTypes.REGISTER_USER_SUCCESS,\r\n  token, email, _id\r\n});\r\n\r\nexport const registerUser = (email, password) => (dispatch) => {\r\n  let REGISTER_ENDPOINT = \"/auth/register\";\r\n  axios.post(REGISTER_ENDPOINT, {email, password})\r\n    .then((response) => {\r\n      console.log(response);\r\n      // dispatch a success action\r\n      if (response.data.message === \"User Created\") {\r\n        let {email, _id} = response.data.createdUser;\r\n        let {token} = response.data;\r\n        history.push('/schedule');\r\n        return dispatch(registerUserSuccess(token, email, _id));\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log('There was an error registering');\r\n      // dispatch a failure action\r\n    });\r\n};\r\n\r\n\r\nexport const loginUserSuccess = (email, id, token) => ({\r\n  type: actionTypes.LOGIN_USER_SUCCESS,\r\n  email,\r\n  id,\r\n  token\r\n});\r\n\r\n\r\nexport const loginUser = (email, password) => (dispatch) => {\r\n  let LOGIN_ENDPOINT = '/auth/login';\r\n  axios.post(LOGIN_ENDPOINT, {email, password})\r\n    .then((response) => {\r\n      console.log(response);\r\n      if (response.data.message === \"Successfully logged in\") {\r\n        let {email, _id} = response.data.loggedInUser;\r\n        let {userToken} = response.data;\r\n        history.push('/schedule');\r\n        return dispatch(loginUserSuccess(email, _id, userToken));\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n};\r\n\r\n\r\nexport const getIpInfoSuccess = (ipData) => ({\r\n  type: actionTypes.GET_IP_INFO_SUCCESS,\r\n  ipData\r\n});\r\nexport const getIpInfo = () => (dispatch) => {\r\n  let BASE_URL = '/service/ip';\r\n  axios.get(BASE_URL)\r\n    .then((response) => {\r\n      // console.log(response);\r\n      if (response.status === 200 && response.data.ipData.status !== 'fail') {\r\n        return dispatch(getIpInfoSuccess(response.data.ipData));\r\n      }\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\n\r\nexport const enableGuestMode = () => ({\r\n  type: actionTypes.ENABLE_GUEST_MODE,\r\n});\r\n\r\n\r\n\r\nexport const showModal = () => ({\r\n  type: actionTypes.SHOW_MODAL\r\n});\r\n\r\n\r\nexport const hideModal = () => ({\r\n  type: actionTypes.HIDE_MODAL\r\n});\r\n\r\n\r\n\r\nexport const setCurrentAppointmentTime = (appointmentTime) => ({\r\n  type: actionTypes.SET_CURRENT_APPOINTMENT_TIME,\r\n  appointmentTime: appointmentTime\r\n});\r\n\r\n\r\nexport const setCurrentAppointmentName = (appointmentName) => ({\r\n  type: actionTypes.SET_CURRENT_APPOINTMENT_NAME,\r\n  appointmentName\r\n});\r\n\r\n\r\nexport const setCurrentAppointmentIndex = (index) => ({\r\n  type: actionTypes.SET_CURRENT_APPOINTMENT_INDEX,\r\n  appointmentIndex: index\r\n});\r\n\r\n\r\nexport const setCurrentAppointmentPhoneNumber = (appointmentPhoneNumber) => ({\r\n  type: actionTypes.SET_CURRENT_APPOINTMENT_PHONE_NUMBER,\r\n  appointmentPhoneNumber\r\n});\r\n\r\n\r\nexport const setAppointmentTimes = (appointments) => ({\r\n  type: actionTypes.SET_APPOINTMENT_TIMES,\r\n  appointments\r\n});\r\n\r\n\r\nexport const updateAppointment = () => ({\r\n  type: actionTypes.UPDATE_APPOINTMENT,\r\n});\r\n\r\n\r\nexport const clearAppointment = () => ({\r\n  type: actionTypes.CLEAR_CURRENT_APPOINTMENT\r\n});\r\n\r\n\r\nexport const setAppointmentEdited = () => ({\r\n  type: actionTypes.SET_APPOINTMENT_EDITED\r\n});\r\n\r\n\r\nexport const setCurrentAppointmentEditedState = (index) => ({\r\n  type: actionTypes.SET_CURRENT_APPOINTMENT_EDIT_STATE,\r\n  appointmentIndex: index\r\n});\r\n\r\n\r\nexport const validatePhoneNumber = () => ({\r\n  type: actionTypes.VALIDATE_PHONE_NUMBER\r\n});\r\n\r\n\r\nexport const validateAppointmentName = () => ({\r\n  type: actionTypes.VALIDATE_APPOINTMENT_NAME\r\n});\r\n\r\n\r\nexport const writeAppointmentsCache = () => ({\r\n  type: actionTypes.WRITE_APPOINTMENTS_CACHE\r\n});\r\n\r\n\r\nexport const retrieveAppointmentsCache = () => ({\r\n  type: actionTypes.RETRIEVE_APPOINTMENTS_CACHE\r\n});\r\n\r\n\r\nexport const resetAppointments = () => ({\r\n  type: actionTypes.RESET_APPOINTMENTS\r\n});\r\n\r\n\r\nexport const showDeleteConfirmationModal = () => ({\r\n  type: actionTypes.SHOW_DELETE_CONFIRMATION_MODAL\r\n});\r\n\r\n\r\nexport const hideDeleteConfirmationModal = () => ({\r\n  type: actionTypes.HIDE_DELETE_CONFIRMATION_MODAL\r\n});\r\n\r\n\r\nexport const setRegistration = () => ({\r\n  type: actionTypes.SET_REGISTRATION\r\n});\r\n\r\n\r\nexport const unsetRegistration = () => ({\r\n  type: actionTypes.UNSET_REGISTRATION\r\n});\r\n\r\n\r\nexport const toggleRegistration = () => ({\r\n  type: actionTypes.TOGGLE_REGISTRATION\r\n});\r\n\r\n\r\nexport const setPassword = (password) => ({\r\n  type: actionTypes.SET_PASSWORD,\r\n  password\r\n});\r\n\r\n\r\nexport const setEmail = (email) => ({\r\n  type: actionTypes.SET_EMAIL,\r\n  email\r\n});\r\n\r\n\r\nexport const validateEmail = () => ({\r\n  type: actionTypes.VALIDATE_EMAIL\r\n});\r\n\r\n\r\nexport const validatePassword = () => ({\r\n  type: actionTypes.VALIDATE_PASSWORD\r\n});\r\n\r\n\r\nexport const validateSignInSignUp = () => ({\r\n  type: actionTypes.VALIDATE_SIGNIN_SIGNUP\r\n}); ","export const GET_APPOINTMENTS_SUCCESS = \"GET APPOINTMENTS SUCCESS\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const CHECK_TOKEN_AND_USER_EXISTS = \"CHECK TOKEN\";\r\nexport const AUTHENTICATE_USER_SUCCESS = \"AUTHENTICATE USER SUCCESS\";\r\nexport const REGISTER_USER_SUCCESS = \"REGISTER USER SUCCESS\";\r\nexport const LOGIN_USER_SUCCESS = \"LOGIN USER SUCCESS\";\r\nexport const GET_IP_INFO_SUCCESS = \"GET_IP_INFO_SUCCESS\";\r\nexport const ENABLE_GUEST_MODE = \"ENABLE GUEST MODE\";\r\nexport const SHOW_MODAL = \"SHOW MODAL\";\r\nexport const HIDE_MODAL = \"HIDE MODAL\";\r\nexport const SET_CURRENT_APPOINTMENT_TIME = \"SET CURRENT APPOINTMENT TIME\";\r\nexport const SET_CURRENT_APPOINTMENT_NAME = \"SET CURRENT APPOINTMENT NAME\";\r\nexport const SET_CURRENT_APPOINTMENT_INDEX = \"SET CURRENT APPOINTMENT INDEX\";\r\nexport const SET_CURRENT_APPOINTMENT_PHONE_NUMBER = \"SET CURRENT APPOINTMENT PHONE NUMBER\";\r\nexport const SET_APPOINTMENT_TIMES = \"SET APPOINTMENT TIMES\";\r\nexport const UPDATE_APPOINTMENT = \"UPDATE APPOINTMENT\";\r\nexport const CLEAR_CURRENT_APPOINTMENT = \"CLEAR CURRENT APPOINTMENT\";\r\nexport const SET_APPOINTMENT_EDITED = \"SET APPOINTMENT EDITED\";\r\nexport const SET_CURRENT_APPOINTMENT_EDIT_STATE = \"SET CURRENT APPOINTMENT EDITED\";\r\nexport const VALIDATE_PHONE_NUMBER = \"VALIDATE PHONE NUMBER\";\r\nexport const VALIDATE_APPOINTMENT_NAME = \"VALIDATE APPOINTMENT NAME\";\r\nexport const WRITE_APPOINTMENTS_CACHE = \"WRITE APPOINTMENTS CACHE\";\r\nexport const RETRIEVE_APPOINTMENTS_CACHE = \"RETRIEVE APPOINTMENTS CACHE\";\r\nexport const RESET_APPOINTMENTS = \"RESET APPOINTMENTS\";\r\nexport const SHOW_DELETE_CONFIRMATION_MODAL = \"SHOW DELETE CONFIRMATION MODAL\";\r\nexport const HIDE_DELETE_CONFIRMATION_MODAL = \"HIDE DELETE CONFIRMATION MODAL\";\r\nexport const SET_REGISTRATION = \"SET_REGISTRATION\";\r\nexport const UNSET_REGISTRATION = \"UNSET_REGISTRATION\";\r\nexport const TOGGLE_REGISTRATION = \"TOGGLE REGISTRATION\";\r\nexport const SET_PASSWORD = \"SET PASSWORD\";\r\nexport const SET_EMAIL = \"SET EMAIL\";\r\nexport const VALIDATE_EMAIL = \"VALIDATE EMAIL\";\r\nexport const VALIDATE_PASSWORD = \"VALIDATE PASSWORD\";\r\nexport const VALIDATE_SIGNIN_SIGNUP = \"VALIDATE SIGNIN SIGNUP\";","import React from 'react';\r\nimport {Navbar, NavItem} from 'react-materialize';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {enableGuestMode} from './../actions/appointmentActions';\r\nimport './navbar.css';\r\n\r\nexport const Nav = (props) => {\r\n  return (\r\n    <Navbar className=\"nav\" brand='React Appointment Scheduler' left>\r\n      <NavItem node={<div></div>}>\r\n        <Link className=\"navLink\" to=\"/\">Home</Link>\r\n      </NavItem>\r\n      <NavItem node={<div></div>} href='components.html'>\r\n        {\r\n          props.currentUserAuthenticated | props.guestMode ?\r\n            <Link className=\"navLink\" to=\"/schedule\">Schedule</Link>\r\n            :\r\n            <Link onClick={() => props.dispatch(enableGuestMode())} className=\"navLink\" to=\"/schedule\">Guest</Link>\r\n        }\r\n          \r\n      </NavItem>\r\n\r\n    </Navbar>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  guestMode: state.guestMode,\r\n  currentUserAuthenticated: state.currentUserAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps)(Nav);","import React from 'react';\r\nimport './appointment.css';\r\n\r\n\r\nconst Appointment = ({appointmentName, appointmentTime, appointmentIndex, appointmentPhoneNumber, edited, onClick}) => {\r\n  let editedClass = `${edited ? 'editedAppointment waves-effect waves-red' : 'newAppointment waves-effect waves-red'} appointmentBody `;\r\n  return (\r\n    <div \r\n      className=\"appointmentContainer\"\r\n      index={appointmentIndex}\r\n      onClick={onClick}>\r\n      <div index={appointmentIndex} className=\"appointment\">\r\n        <div index={appointmentIndex} className={editedClass + 'name'}>{appointmentName ? appointmentName : '+'}</div>\r\n        <div index={appointmentIndex} className={editedClass + 'phoneNumber'}>{appointmentPhoneNumber ? appointmentPhoneNumber : 'Phone number'}</div>\r\n        <div index={appointmentIndex} className={editedClass + 'time'}>{appointmentTime}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Appointment;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Appointment from './appointment';\r\nimport './timeTable.css';\r\nimport {\r\n  showModal, \r\n  setCurrentAppointmentName, \r\n  setCurrentAppointmentIndex,\r\n  setCurrentAppointmentTime,\r\n  setCurrentAppointmentPhoneNumber,\r\n  setCurrentAppointmentEditedState\r\n} from '../actions/appointmentActions';\r\n\r\n\r\nclass TimeTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.appointmentClick = this.appointmentClick.bind(this);\r\n  }\r\n\r\n  appointmentClick(event) {\r\n    let index = parseInt(event.target.getAttribute(\"index\"));\r\n    let appointmentName = this.props.appointments[index].appointmentName;\r\n    let appointmentTime = this.props.appointments[index].appointmentTime;\r\n    let appointmentPhoneNumber = this.props.appointments[index].appointmentPhoneNumber;\r\n    this.props.dispatch(setCurrentAppointmentTime(appointmentTime));\r\n    this.props.dispatch(setCurrentAppointmentName(appointmentName));\r\n    this.props.dispatch(setCurrentAppointmentPhoneNumber(appointmentPhoneNumber));\r\n    this.props.dispatch(setCurrentAppointmentIndex(index));\r\n    this.props.dispatch(setCurrentAppointmentEditedState(index));\r\n    this.props.dispatch(showModal());\r\n\r\n  }\r\n\r\n  render() {\r\n    let appointments = null;\r\n    if (this.props.appointments) {\r\n      appointments = this.props.appointments.map((appt, i) => {\r\n        return (\r\n          <Appointment \r\n            key={i} \r\n            appointmentTime={appt.appointmentTime} \r\n            appointmentName={appt.appointmentName}\r\n            appointmentIndex={appt.appointmentIndex}\r\n            appointmentPhoneNumber={appt.appointmentPhoneNumber}\r\n            edited={appt.edited}\r\n            onClick={this.appointmentClick}/>\r\n        );\r\n      });\r\n    }\r\n    return (\r\n      <div>\r\n        <div className=\"timeTable\">\r\n          <div className=\"appointmentHead name\">Appointment Name</div>\r\n          <div className=\"appointmentHead phoneNumber\">Phone</div>\r\n          <div className=\"appointmentHead time\">Time</div>\r\n        </div>\r\n        {appointments}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  appointments: state.appointments\r\n});\r\n\r\nexport default connect(mapStateToProps)(TimeTable);","import moment from 'moment';\r\n\r\n\r\nconst generateTimes = (initialHour, endHour) =>  {\r\n  const hours = [];\r\n  for(let hour = initialHour, i = 0; hour < endHour + 1; hour++, i++) {\r\n    hours.push({\r\n      appointmentTime: moment({ hour }).format('h:mm A'),\r\n      appointmentName: \"\",\r\n      appointmentIndex: i,\r\n      appointmentPhoneNumber: \"\",\r\n      edited: false\r\n    });\r\n  }\r\n  // console.log(hours);\r\n  return hours;\r\n};\r\nexport default generateTimes;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Modal, Button, Row, Col, Input} from 'react-materialize';\r\nimport {\r\n  hideModal, \r\n  setCurrentAppointmentName,\r\n  setCurrentAppointmentPhoneNumber,\r\n  setAppointmentTimes,\r\n  updateAppointment,\r\n  clearAppointment,\r\n  setAppointmentEdited,\r\n  validateAppointmentName,\r\n  validatePhoneNumber,\r\n  retrieveAppointmentsCache,\r\n  writeAppointmentsCache,\r\n  resetAppointments,\r\n  showDeleteConfirmationModal,\r\n  hideDeleteConfirmationModal,\r\n  getAppointments,\r\n  checkTokenAndUserExists\r\n  \r\n} from './../actions/appointmentActions';\r\nimport TimeTable from './../components/timeTable';\r\nimport generateTimes from './../utils/generateSchedule';\r\nimport './schedule.css';\r\n\r\nclass Schedule extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.closeModal = this.closeModal.bind(this);\r\n    this.closeModalAndUpdate = this.closeModalAndUpdate.bind(this);\r\n    this.updateApptName = this.updateApptName.bind(this);\r\n    this.updateAppointment = this.updateAppointment.bind(this);\r\n    this.clearAppointment = this.clearAppointment.bind(this);\r\n    this.updateApptPhoneNumber = this.updateApptPhoneNumber.bind(this);\r\n    this.validate = this.validate.bind(this);\r\n    this.showConfirmationModal = this.showConfirmationModal.bind(this);\r\n    this.closeConfirmationModal = this.closeConfirmationModal.bind(this);\r\n    this.deleteAppointments = this.deleteAppointments.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(checkTokenAndUserExists());\r\n    if (this.props.guestMode) {\r\n      this.props.dispatch(retrieveAppointmentsCache());\r\n    } else {\r\n      this.props.dispatch(setAppointmentTimes(generateTimes(this.props.initialHour, this.props.endHour)));\r\n    }\r\n    if (this.props.currentUserAuthenticated) {\r\n      this.props.dispatch(getAppointments(this.props.currentUserToken));\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.props.dispatch(checkTokenAndUserExists());\r\n    if (nextProps.currentUserAuthenticated) {\r\n      this.props.dispatch(getAppointments(this.props.currentUserToken));\r\n    }\r\n  }\r\n\r\n  closeModal() {\r\n    this.props.dispatch(hideModal());\r\n    this.clearAppointment();\r\n  }\r\n  \r\n  closeModalAndUpdate() {\r\n    this.props.dispatch(hideModal());\r\n    this.props.dispatch(updateAppointment());\r\n    this.props.dispatch(setAppointmentEdited());\r\n    this.props.dispatch(writeAppointmentsCache());\r\n    this.clearAppointment();\r\n  }\r\n\r\n  validate() {\r\n    this.props.dispatch(validateAppointmentName());\r\n    this.props.dispatch(validatePhoneNumber());\r\n  }\r\n\r\n  clearAppointment() {\r\n    this.props.dispatch(clearAppointment());\r\n  }\r\n\r\n  updateApptName(event) {\r\n    let name = event.target.value;\r\n    this.props.dispatch(setCurrentAppointmentName(name));\r\n    this.props.dispatch(validateAppointmentName());\r\n  }\r\n\r\n  updateApptPhoneNumber(event) {\r\n    let phoneNumber = event.target.value;\r\n    this.props.dispatch(setCurrentAppointmentPhoneNumber(phoneNumber));\r\n    this.props.dispatch(validatePhoneNumber());\r\n  }\r\n\r\n  updateAppointment() {\r\n    this.props.dispatch(updateAppointment());\r\n    \r\n  }\r\n\r\n  deleteAppointments() {\r\n    this.props.dispatch(resetAppointments());\r\n    this.props.dispatch(setAppointmentTimes(generateTimes(this.props.initialHour, this.props.endHour)));\r\n\r\n    this.closeConfirmationModal();\r\n  }\r\n\r\n  closeConfirmationModal () {\r\n    this.props.dispatch(hideDeleteConfirmationModal());\r\n  }\r\n\r\n  showConfirmationModal () {\r\n    this.props.dispatch(showDeleteConfirmationModal());\r\n  }\r\n    \r\n  render() {\r\n    let modalHeader = this.props.currentAppointment.edited ? 'Update Appointment Details' : 'Create Appointment';\r\n    let modalButtonText = this.props.currentAppointment.edited ? 'Update' : 'Create';\r\n    return (\r\n      <div className=\"slowPopIn\">\r\n        <div className=\"scheduleContainer\">\r\n          {this.props.guestMode ? (\r\n            <div className=\"guestModeContainer\">\r\n              <Button \r\n                id=\"appointmentReset\"\r\n                waves=\"red\"\r\n                onClick={this.showConfirmationModal}>Reset Appointments\r\n              </Button>\r\n              <Modal\r\n                header=\"Delete Appointments\"\r\n                modalOptions={{complete: this.closeConfirmationModal}}\r\n                actions={[\r\n                  <Button \r\n                    key=\"close\" \r\n                    onClick={this.closeConfirmationModal}\r\n                    waves=\"red\"\r\n                    id=\"closeConfirmationModal\">\r\n                  Close\r\n                  </Button>,\r\n                  <Button \r\n                    key=\"confirm\"\r\n                    onClick={this.deleteAppointments}\r\n                    waves=\"green\"\r\n                    id=\"confirmConfirmationModal\">\r\n                  Confirm\r\n                  </Button>\r\n                ]}\r\n                open={this.props.showDeleteModal}>\r\n                <p>Are you sure you want to delete all appointments?</p>\r\n              </Modal>\r\n              <h5 className=\"guestMode\">Guest mode</h5>\r\n              <TimeTable/>\r\n            </div>\r\n          ):\r\n            <div className=\"authenticated\">\r\n              <p>Welcome {this.props.currentUserEmail ? this.props.currentUserEmail : ''}</p>\r\n              <TimeTable/>\r\n            </div>\r\n          }\r\n        </div>\r\n\r\n        <Modal\r\n          header={modalHeader}\r\n          open={this.props.showModal}\r\n          fixedFooter\r\n          actions={[\r\n            <Button \r\n              id=\"closeModal\" \r\n              key=\"close\" \r\n              onClick={this.closeModal}>\r\n              Close\r\n            </Button>,\r\n            <Button \r\n              id=\"updateModal\" \r\n              key=\"updateModal\" \r\n              onClick={this.closeModalAndUpdate}\r\n              disabled={!this.props.appointmentNameValid || !this.props.phoneNumberValid}>\r\n              {modalButtonText}\r\n            </Button>\r\n          ]}\r\n          modalOptions={{complete: this.closeModal, ready: this.validate}}>\r\n          <Row>\r\n            <Col l={6}>\r\n              <Input\r\n                id=\"appointmentName\"\r\n                placeholder={['+', ''].indexOf(this.props.currentAppointment.appointmentName) === -1 ? '' : 'Enter an appointment'}\r\n                defaultValue={this.props.currentAppointment.appointmentName}\r\n                value={this.props.currentAppointment.appointmentName === '+' ? '' : this.props.currentAppointment.appointmentName}\r\n                onChange={this.updateApptName}\r\n                error={!this.props.appointmentNameValid ? 'Enter an appointment name' : ''}\r\n                success={this.props.appointmentNameValid ? '\\u2713' : ''}\r\n                label=\"Appointment Name\">\r\n              </Input>\r\n            </Col>\r\n            <Col l={6}>\r\n              <Input\r\n                id=\"appointmentPhoneNumber\"\r\n                placeholder={this.props.currentAppointment.appointmentPhoneNumber === '' ? '123-123-5123': ''}\r\n                value={this.props.currentAppointment.appointmentPhoneNumber === '' ? '' : this.props.currentAppointment.appointmentPhoneNumber}\r\n                onChange={this.updateApptPhoneNumber}\r\n                label=\"Appointment Phone Number\"\r\n                error={!this.props.phoneNumberValid ? '123-456-7890' : ''}\r\n                success={this.props.phoneNumberValid ? '\\u2713': ''}>\r\n              </Input>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <div>Appointment Time: {this.props.currentAppointment.appointmentTime}</div>\r\n          </Row>\r\n          {this.props.appointmentValid ? null : <div className=\"error\"></div>}\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  guestMode: state.guestMode,\r\n  showModal: state.showModal,\r\n  currentAppointment: state.currentAppointment,\r\n  appointments: state.appointments,\r\n  appointmentNameValid: state.appointmentNameValid,\r\n  phoneNumberValid: state.phoneNumberValid,\r\n  showDeleteModal: state.showDeleteModal,\r\n  initialHour: state.initialHour,\r\n  endHour: state.endHour,\r\n  currentUserAuthenticated: state.currentUserAuthenticated,\r\n  currentUserToken: state.currentUserToken,\r\n  currentUserID: state.currentUserID,\r\n  currentUserEmail: state.currentUserEmail\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps)(Schedule);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Row, Col, Input, Button} from 'react-materialize';\r\nimport {\r\n  toggleRegistration,\r\n  unsetRegistration,\r\n  setRegistration,\r\n  setPassword,\r\n  setEmail,\r\n  validateEmail,\r\n  validatePassword,\r\n  validateSignInSignUp,\r\n  registerUser,\r\n  loginUser\r\n} from './../actions/appointmentActions';\r\nimport './signUpSignIn.css';\r\n\r\n\r\nclass SignUpSignIn extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggleRegistration = this.toggleRegistration.bind(this);\r\n    this.setEmail = this.setEmail.bind(this);\r\n    this.setPassword = this.setPassword.bind(this);\r\n    this.validateEmail = this.validateEmail.bind(this);\r\n    this.validatePassword = this.validatePassword.bind(this);\r\n    this.handleSignUpSignIn = this.handleSignUpSignIn.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.determineRegistration();\r\n  }\r\n\r\n  setPassword(event) {\r\n    let password = event.target.value;\r\n    this.props.dispatch(setPassword(password));\r\n    this.validatePassword();\r\n    this.validateSignInSignUpForm();\r\n  }\r\n\r\n  setEmail(event) {\r\n    let email = event.target.value;\r\n    this.props.dispatch(setEmail(email));\r\n    this.validateEmail();\r\n    this.validateSignInSignUpForm();\r\n  }\r\n\r\n  validatePassword() {\r\n    this.props.dispatch(validatePassword());\r\n  }\r\n\r\n  validateEmail() {\r\n    this.props.dispatch(validateEmail());\r\n  }\r\n\r\n  validateSignInSignUpForm() {\r\n    this.props.dispatch(validateSignInSignUp());\r\n  }\r\n\r\n  handleSignUpSignIn() {\r\n    console.log('Inside handle signup sign in ');\r\n    console.log('this.props inside handle signup sign in', this.props);\r\n    if (this.props.signInSignUpFormValid) {\r\n      if (this.props.registration) {\r\n        this.props.dispatch(registerUser(this.props.email, this.props.password));\r\n      } else {\r\n        this.props.dispatch(loginUser(this.props.email, this.props.password));\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  determineRegistration() {\r\n    if (this.props.match.url === '/login') {\r\n      this.props.dispatch(unsetRegistration());\r\n    } else if (this.props.match.url === '/register') {\r\n      this.props.dispatch(setRegistration());\r\n    }\r\n  }\r\n\r\n  toggleRegistration() {\r\n    this.props.dispatch(toggleRegistration());\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"slowPopIn\" id=\"signUpSignIn\">\r\n        <div className=\"choice\">I would like to: </div>\r\n        <Row>\r\n          <Col l={12}>\r\n            <Input \r\n              type=\"switch\"\r\n              checked={this.props.registration}\r\n              onClick={this.toggleRegistration}\r\n              onLabel=\"Register\"\r\n              offLabel=\"Login\"/>\r\n          </Col>\r\n\r\n        </Row>\r\n        <Row>\r\n          <Col m={6} offset=\"m5\">\r\n            <Input\r\n              label=\"Email\"\r\n              id=\"email\"\r\n              onChange={this.setEmail}\r\n              success={this.props.emailValid ? '\\u2713' : ''}\r\n              error={!this.props.emailValid ? 'Email is invalid' : ''}/>\r\n          </Col>\r\n          <Col m={6} offset=\"m5\">\r\n            <Input\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              onChange={this.setPassword}\r\n              success={this.props.passwordValid ? '\\u2713' : ''}\r\n              error={!this.props.passwordValid ? 'Between 6 and 20 characters. Must contain a lowercase, uppercase, number, and special character.' : ''}/>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          \r\n        </Row>\r\n        <Row>\r\n          <Button \r\n            waves=\"green\" \r\n            id=\"authSubmit\"\r\n            disabled={this.props.signInSignUpFormValid ? false : true}\r\n            onClick={this.handleSignUpSignIn}>\r\n            {this.props.registration ? 'Register' : 'Sign In'}\r\n          </Button>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  registration: state.registration,\r\n  emailValid: state.emailValid,\r\n  passwordValid: state.passwordValid,\r\n  signInSignUpFormValid: state.signInSignUpFormValid,\r\n  password: state.password,\r\n  email: state.email\r\n});\r\n\r\nexport default connect(mapStateToProps)(SignUpSignIn);\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Button} from 'react-materialize';\r\nimport {Link} from 'react-router-dom';\r\nimport {enableGuestMode, checkTokenAndUserExists} from './../actions/appointmentActions';\r\nimport './home.css';\r\nimport {getIpInfo} from './..//actions/appointmentActions';\r\n\r\nclass Home extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.guestMode = this.guestMode.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(checkTokenAndUserExists());\r\n    if (!this.props.ipData) {\r\n      this.props.dispatch(getIpInfo());\r\n    }\r\n  }\r\n\r\n  guestMode() {\r\n    this.props.dispatch(enableGuestMode());\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.ipData, 'ipdata in home.js!');\r\n    let ipInfo = null;\r\n    if (this.props.ipData) {\r\n      ipInfo = ` guest from ${this.props.ipData.city}, ${this.props.ipData.region}!`;\r\n    }\r\n    return (\r\n      <div className=\"headerContainer slowPopIn\">\r\n        <header className=\"App-header\">\r\n          <p className=\"welcomeText\">\r\n          Welcome{ipInfo ? ipInfo: '!'} {!this.props.currentUserAuthenticated ? 'Please login or try out the app in Guest Mode!': 'Please continue to your schedule!'}\r\n          </p>\r\n        </header>\r\n        {\r\n          !this.props.currentUserAuthenticated ?\r\n            <div className=\"welcome\">\r\n              <Button \r\n                waves=\"green\">\r\n                <Link to=\"/login\">\r\n                Login\r\n                </Link>\r\n              </Button>\r\n              <Button \r\n                waves=\"green\">\r\n                <Link to=\"/register\">\r\n                Register\r\n                </Link>\r\n              </Button>\r\n              \r\n              <Button waves=\"green\">\r\n                <Link onClick={this.guestMode} to=\"/schedule\">\r\n                Guest\r\n                </Link>\r\n              </Button>\r\n            </div>\r\n            :\r\n            <div className=\"welcome\">\r\n              <Button waves=\"green\">\r\n                <Link to=\"/schedule\">\r\n                Schedule\r\n                </Link>\r\n              </Button>\r\n            </div>\r\n        }\r\n      \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  guestMode: state.guestMode,\r\n  ipData: state.ipData,\r\n  currentUserAuthenticated: state.currentUserAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Route, withRouter} from 'react-router-dom';\r\nimport Nav from './components/navbar';\r\nimport Schedule from './pages/schedule';\r\nimport SignUpSignIn from './pages/signUpSignIn';\r\nimport Home from './pages/home';\r\nimport {setAppointmentTimes, checkTokenAndUserExists, authenticateUser} from './actions/appointmentActions';\r\nimport generateTimes from './utils/generateSchedule';\r\nimport './App.css';\r\n\r\nexport class App extends Component {\r\n\r\n  componentDidMount() {\r\n    let times = generateTimes(this.props.initialHour, this.props.endHour);\r\n    this.props.dispatch(setAppointmentTimes(times));\r\n    this.props.dispatch(checkTokenAndUserExists());\r\n    if (this.props.currentUserID && this.props.currentUserToken) {\r\n      this.props.dispatch(authenticateUser(this.props.currentUserToken));\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"headerContainer\">\r\n          <Nav/>\r\n          <Route exact path=\"/\" component={Home}/>\r\n          <Route path=\"/schedule\" component={Schedule}/>\r\n          <Route path=\"/:path(login|register)\" component={SignUpSignIn}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialHour: state.initialHour,\r\n  endHour: state.endHour,\r\n  currentUserID: state.currentUserID,\r\n  currentUserToken: state.currentUserToken\r\n});\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps)(App));","/* eslint-disable no-case-declarations */\r\nimport * as actionTypes from '../actions/actionTypes';\r\n\r\nexport const initialState = {\r\n  currentUserAuthenticated: false,\r\n  currentUserID: '',\r\n  currentUserToken: '',\r\n  currentUserEmail: '',\r\n  appointments: [],\r\n  guestMode: false,\r\n  ipAvailable: false,\r\n  ipData: null,\r\n  initialHour: 9,\r\n  endHour: 17,\r\n  currentAppointment: {},\r\n  appointmentNameValid: false,\r\n  phoneNumberValid: false,\r\n  appointmentNameFormTouched: false,\r\n  appointmentPhoneNumberFormTouched: false,\r\n  showDeleteModal: false,\r\n  registration: false,\r\n  password: \"\",\r\n  email: \"\",\r\n  emailValid: false,\r\n  passwordValid: false,\r\n  signInSignUpFormValid: false\r\n};\r\n\r\nexport const appointmentReducer = (state=initialState, action) => {\r\n  switch(action.type) {\r\n  case actionTypes.ENABLE_GUEST_MODE:\r\n    return Object.assign({}, state, {guestMode: true});\r\n\r\n  case actionTypes.GET_IP_INFO_SUCCESS:\r\n    return Object.assign({}, state, {ipData: action.ipData});\r\n\r\n  case actionTypes.SHOW_MODAL:\r\n    return Object.assign({}, state, {showModal: true});\r\n\r\n  case actionTypes.HIDE_MODAL:\r\n    return Object.assign({}, state, {showModal: false});\r\n  \r\n  case actionTypes.SET_APPOINTMENT_TIMES:\r\n    return Object.assign({}, state, {appointments: action.appointments});\r\n\r\n  case actionTypes.SET_CURRENT_APPOINTMENT_NAME:\r\n    return Object.assign(\r\n      {}, \r\n      state, \r\n      {\r\n        currentAppointment: \r\n        {\r\n          ...state.currentAppointment,\r\n          appointmentName: action.appointmentName\r\n        }\r\n      }\r\n    );\r\n\r\n  case actionTypes.SET_CURRENT_APPOINTMENT_TIME:\r\n    return Object.assign(\r\n      {}, \r\n      state, {\r\n        currentAppointment: {\r\n          ...state.currentAppointment,\r\n          appointmentTime: action.appointmentTime, \r\n        }\r\n      });\r\n\r\n  case actionTypes.SET_CURRENT_APPOINTMENT_PHONE_NUMBER:\r\n    return Object.assign(\r\n      {},\r\n      state, {\r\n        currentAppointment: {\r\n          ...state.currentAppointment,\r\n          appointmentPhoneNumber: action.appointmentPhoneNumber,\r\n        }\r\n      }\r\n    );\r\n\r\n  case actionTypes.SET_CURRENT_APPOINTMENT_INDEX:\r\n    return Object.assign(\r\n      {},\r\n      state,\r\n      {\r\n        currentAppointment: {\r\n          ...state.currentAppointment,\r\n          appointmentIndex: action.appointmentIndex\r\n        }\r\n      }\r\n    );\r\n\r\n  case actionTypes.UPDATE_APPOINTMENT:\r\n    if (!state.currentAppointment.appointmentName) {\r\n      return state;\r\n    }\r\n    let updatedAppointments = state.appointments.slice();\r\n    updatedAppointments[state.currentAppointment.appointmentIndex] = state.currentAppointment;\r\n    if (!state.currentAppointment.edited) {\r\n      state.currentAppointment.edited = true;\r\n    }\r\n    return Object.assign({}, state, {\r\n      appointments: updatedAppointments,\r\n      currentAppointment: {...state.currentAppointment}\r\n    });\r\n\r\n  case actionTypes.CLEAR_CURRENT_APPOINTMENT:\r\n    return Object.assign({}, state, {currentAppointment: {}});\r\n\r\n  case actionTypes.SET_APPOINTMENT_EDITED:\r\n\r\n    let appointments = state.appointments.slice();\r\n    appointments[state.currentAppointment.appointmentIndex].edited = true;\r\n\r\n    return Object.assign({}, state, {appointments});\r\n  \r\n  case actionTypes.SET_CURRENT_APPOINTMENT_EDIT_STATE:\r\n    return Object.assign(\r\n      {},\r\n      state,\r\n      {\r\n        currentAppointment: {\r\n          ...state.currentAppointment,\r\n          edited: state.appointments[action.appointmentIndex].edited\r\n        }\r\n      }\r\n    );\r\n\r\n  case actionTypes.VALIDATE_PHONE_NUMBER:\r\n    let phoneNumber = state.currentAppointment.appointmentPhoneNumber;\r\n    let phoneNumberValid = new RegExp(/^\\d{3}-\\d{3}-\\d{4}$/);\r\n    return Object.assign({}, state, {phoneNumberValid: phoneNumberValid.test(phoneNumber)});\r\n\r\n  case actionTypes.VALIDATE_APPOINTMENT_NAME:\r\n    return Object.assign({}, state, {appointmentNameValid: Boolean(state.currentAppointment.appointmentName)});\r\n\r\n  case actionTypes.RETRIEVE_APPOINTMENTS_CACHE:\r\n    if (state.guestMode) {\r\n      let cachedAppointments = JSON.parse(localStorage.getItem(\"guest\"));\r\n      if (cachedAppointments) {\r\n        return Object.assign({}, state, {appointments: cachedAppointments});\r\n      }\r\n    }\r\n    return state;\r\n\r\n  case actionTypes.WRITE_APPOINTMENTS_CACHE:\r\n    if (state.guestMode) {\r\n      localStorage.setItem(\"guest\", JSON.stringify(state.appointments));\r\n    }\r\n    return state;\r\n\r\n  case actionTypes.RESET_APPOINTMENTS:\r\n    if (state.guestMode) {\r\n      localStorage.setItem(\"guest\", null);\r\n      return Object.assign({}, state, {apppointments: []});\r\n    }\r\n    return state;\r\n\r\n  case actionTypes.SHOW_DELETE_CONFIRMATION_MODAL:\r\n    if (state.guestMode) {\r\n      return Object.assign({}, state, {showDeleteModal: true});\r\n    }\r\n    return state;\r\n\r\n  case actionTypes.HIDE_DELETE_CONFIRMATION_MODAL:\r\n    if (state.guestMode) {\r\n      return Object.assign({}, state, {showDeleteModal: false});\r\n    }\r\n    return state;\r\n\r\n  case actionTypes.SET_REGISTRATION:\r\n    return Object.assign({}, state, {registration: true});\r\n\r\n  case actionTypes.UNSET_REGISTRATION:\r\n    return Object.assign({}, state, {registration: false});\r\n\r\n  case actionTypes.TOGGLE_REGISTRATION:\r\n    return Object.assign({}, state, {registration: !state.registration});\r\n\r\n  case actionTypes.SET_PASSWORD:\r\n    return Object.assign({}, state, {password: action.password});\r\n\r\n  case actionTypes.SET_EMAIL:\r\n    return Object.assign({}, state, {email: action.email});\r\n\r\n  case actionTypes.VALIDATE_EMAIL:\r\n    const emailValid = new RegExp(/^.+@{1}.+\\.[a-zA-Z]{2,4}$/);\r\n    \r\n    if (emailValid.test(state.email)) {\r\n      return Object.assign({}, state, {emailValid: true});\r\n    }\r\n    return Object.assign({}, state, {emailValid: false});\r\n\r\n  case actionTypes.VALIDATE_PASSWORD:\r\n    const passwordValid = new RegExp(/((?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$?%!/\\{\\}\\[\\]\\(\\)]).{6,20})/);\r\n    if (passwordValid.test(state.password)) {\r\n      return Object.assign({}, state, {passwordValid: true});\r\n    }\r\n    return Object.assign({}, state, {passwordValid: false});\r\n\r\n  case actionTypes.VALIDATE_SIGNIN_SIGNUP:\r\n    if (state.emailValid && state.passwordValid) {\r\n      return Object.assign({}, state, {signInSignUpFormValid: true});\r\n    }\r\n    return Object.assign({}, state, {signInSignUpFormValid: false});\r\n  \r\n  case actionTypes.CHECK_TOKEN_AND_USER_EXISTS:\r\n    let authInfo = JSON.parse(localStorage.getItem(\"auth\"));\r\n    if (authInfo){\r\n      let {token, email, userID} = authInfo;\r\n      \r\n      if (token && userID && email) {\r\n        return Object.assign(\r\n          {}, state, {currentUserID: userID, currentUserToken: token, currentUserEmail: email});\r\n      }\r\n    }\r\n    return state;\r\n  case actionTypes.REGISTER_USER_SUCCESS:\r\n    \r\n    localStorage.setItem(\"auth\", JSON.stringify({\r\n      token: action.token,\r\n      userEmail: action.email,\r\n      userID: action._id\r\n    }));\r\n    return Object.assign({}, state, {currentUserAuthenticated: true});\r\n  case actionTypes.AUTHENTICATE_USER_SUCCESS:\r\n    return Object.assign({}, state, {currentUserAuthenticated: true});\r\n  case actionTypes.LOGIN_USER_SUCCESS:\r\n    localStorage.setItem(JSON.stringify({\r\n      token: action.token,\r\n      userEmail: action.email,\r\n      userID: action._id\r\n    }));\r\n    return Object.assign({}, state, {currentUserAuthenticated: true});\r\n  default:\r\n    return state;\r\n  }\r\n};","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {appointmentReducer, initialState} from './reducers/appointmentReducer';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\n  \r\nexport default createStore(\r\n  appointmentReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {Provider} from 'react-redux';\r\nimport store from './store';\r\nimport {Router} from 'react-router-dom';\r\nimport history from './history';\r\n\r\n\r\nReactDOM.render(\r\n  \r\n  <Provider store={store}>  \r\n    <Router history={history}>\r\n      <App />\r\n    </Router>\r\n  </Provider>\r\n  , document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}